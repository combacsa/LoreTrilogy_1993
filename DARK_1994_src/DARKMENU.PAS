Unit DarkMenu;
{$X+}
INTERFACE

Uses
   Crt, Dos, Graph, UHanX, DarkSub;

 Procedure CureSpell;
 Procedure PhenominaSpell;
 Procedure ViewParty;
 Procedure ViewCharacter;
 Procedure QuickView;
 Procedure CastSpell;
 Function ReturnPredict : integer;
 Procedure Extrasense;
 Procedure Rest;
 Procedure Use_Item(select_num : byte);
 Procedure GameOption;
 Procedure SelectMode;


IMPLEMENTATION

Procedure SPnotEnough;
begin
   Print(7,'그러나, 마법 지수가 충분하지 않습니다.');
   PressAnyKey;
end;

Procedure HealOne(whom : byte);
begin
   with player[whom] do begin
      if (dead > 0) or (unconscious > 0) or (poison > 0) then begin
         if party.etc[6] = 0 then Print(7,name+'는 치료될 상태가 아닙니다.');
         exit;
      end;
      if hp >= endurance * level * 10 then begin
         if party.etc[6] = 0 then Print(7,name+'는 치료할 필요가 없습니다.');
         exit;
      end;
   end;
   i := 2 * player[person].level;
   if player[person].sp < i then begin
      if party.etc[6] = 0 then SPnotEnough;
      exit;
   end;
   player[person].sp := player[person].sp - i;
   player[whom].hp := player[whom].hp + i * 10;
   with player[whom] do
   if hp > (level * endurance * 10) then hp := level * endurance * 10;
   Print(15,player[whom].name+'는 치료되어 졌습니다.');
end;

Procedure CureOne(whom : byte);
begin
   with player[whom] do begin
      if (dead > 0) or (unconscious > 0) then begin
         if party.etc[6] = 0 then Print(7,name+'는 독이 치료될 상태가 아닙니다.');
         exit;
      end;
      if poison = 0 then begin
         if party.etc[6] = 0 then Print(7,player[whom].name+'는 독에 걸리지 않았습니다.');
         exit;
      end;
   end;
   if player[person].sp < 15 then begin
      if party.etc[6] = 0 then SPnotEnough;
      exit;
   end;
   player[person].sp := player[person].sp - 15;
   player[whom].poison := 0;
   Print(15,player[whom].name+'의 독은 제거 되었습니다.');
end;

Procedure ConsciousOne(whom : byte);
begin
   with player[whom] do begin
      if dead > 0 then begin
         if party.etc[6] = 0 then Print(7,name+'는 의식이 돌아올 상태가 아닙니다.');
         exit;
      end;
      if unconscious = 0 then begin
         if party.etc[6] = 0 then Print(7,player[whom].name+'는 의식불명이 아닙니다.');
         exit;
      end;
   end;
   i := 10 * player[whom].unconscious;
   if player[person].sp < i then begin
      if party.etc[6] = 0 then SPnotEnough;
      exit;
   end;
   player[person].sp := player[person].sp - i;
   player[whom].unconscious := 0;
   if player[whom].hp <= 0 then player[whom].hp := 1;
   Print(15,player[whom].name+'는 의식을 되찾았습니다.');
end;

Procedure RevitalizeOne(whom : byte);
begin
   if player[whom].dead = 0 then begin
      if party.etc[6] = 0 then Print(7,player[whom].name+'는 아직 살아 있습니다.');
      exit;
   end;
   i := 30 * player[whom].dead;
   if player[person].sp < i then begin
      if party.etc[6] = 0 then SPnotEnough;
      exit;
   end;
   player[person].sp := player[person].sp - i;
   with player[whom] do begin
      dead := 0;
      if unconscious > endurance * level then
         unconscious := endurance * level;
      if unconscious = 0 then unconscious := 1;
      Print(15,name+'는 다시 생명을 얻었습니다.');
   end;
end;

Procedure HealAll;
var i : byte;
begin
   for i:= 1 to 6 do if player[i].name <> '' then HealOne(i);
end;

Procedure CureAll;
var i : byte;
begin
   for i:= 1 to 6 do if player[i].name <> '' then CureOne(i);
end;

Procedure ConsciousAll;
var i : byte;
begin
   for i:= 1 to 6 do if player[i].name <> '' then ConsciousOne(i);
end;

Procedure RevitalizeAll;
var i : byte;
begin
   for i:= 1 to 6 do if player[i].name <> '' then RevitalizeOne(i);
end;

Procedure CureSpell;
var
   i,j,whom : integer;
begin
   if player[person].classtype = magic then
      i := player[person].cure_magic div 10
   else
      i := player[person].axe_skill div 10;
   if i <= 0 then begin
      Print(7,'당신은 치료 마법을 사용할 능력이 없습니다.');
      PressAnyKey;
      exit;
   end;
   m[0] := '누구에게';
   for i:= 1 to 6 do
   if player[i].name <> '' then
      m[i] := player[i].name
   else
      m[i] := '없습니다';
   j := 6;
   if player[6].name <> '' then j := 7;
   m[j] := '모든 사람들에게';
   if player[person].classtype = magic then
      i := player[person].cure_magic div 10
   else
      i := player[person].axe_skill div 10;
   if i < 6 then
      whom := Select(60,j-1,j-1,TRUE,TRUE)
   else
      whom := Select(60,j,j,TRUE,TRUE);
   if whom = 0 then exit;
   m[0] := '선택';
   if whom <> j then begin
      for i := 1 to 5 do m[i] := ReturnMagic(3,i);
      if player[person].classtype = magic then
         i := player[person].cure_magic div 10
      else
         i := player[person].axe_skill div 10;
      if i > 5 then i := 5;
      j := Select(60,i,5,FALSE,TRUE);
      if j = 0 then exit;
      case j of
         1 : HealOne(whom);
         2 : CureOne(whom);
         3 : ConsciousOne(whom);
         4 : RevitalizeOne(whom);
         5 : begin
                RevitalizeOne(whom);
                ConsciousOne(whom);
                CureOne(whom);
                HealOne(whom);
             end;
      end;
   end
   else begin
      for i := 6 to 10 do m[i-5] := ReturnMagic(3,i);
      if player[person].classtype = magic then
         i := player[person].cure_magic div 10 - 5
      else
         i := player[person].axe_skill div 10 - 5;
      if i < 1 then begin
         print(7,'강한 치료 마법은 아직 불가능 합니다.');
         PressAnyKey;
         exit;
      end;
      j := Select(60,i,5,TRUE,TRUE);
      case j of
         1 : HealAll;
         2 : CureAll;
         3 : ConsciousAll;
         4 : RevitalizeAll;
         5 : begin
                RevitalizeAll;
                ConsciousAll;
                CureAll;
                HealAll;
             end;
      end;
   end;
   Print(7,''); Print(7,'');
   SimpleDisCond;
   PressAnyKey;
end;

Procedure Wizard_Eye;
var
   x_init,y_init,x_end,y_end : integer;
begin
   Clear_View_Screen;
   if (xmax <= 100) and (ymax <= 80) then begin
      x_init := 1; y_init := 1;
      x_end := xmax; y_end := ymax;
   end
   else begin
      x_init := x-50; y_init := y-40;
      x_end := x+50; y_end := y+40;
      if x_init < 1 then begin
         x_init := 1;
         if xmax > 100 then x_end := 100 else x_end := xmax;
      end;
      if y_init < 1 then begin
         y_init := 1;
         if ymax > 80 then y_end := 80 else y_end := ymax;
      end;
      if x_end > xmax then begin
         x_end := xmax;
         if xmax > 100 then x_init := xmax - 100 else x_init := 1;
      end;
      if y_end > ymax then begin
         y_end := ymax;
         if ymax > 80 then y_init := ymax - 80 else y_init := 1;
      end;
   end;
   for j := y_init to y_end do
   for i := x_init to x_end do begin
      case position of
         town : case Real_map(i,j) of
                   1..18,20,21 : k := White; { Wall }
                         22    : k := LightGreen;  { Enterance }
                         23    : k := LightCyan;   { Sign }
                         24    : k := LightBlue;   { Water }
                         25    : k := Cyan;        { Swamp }
                         26    : k := LightRed;    { Lava }
                   0,19,27..47 : k := Black  { Pass }
                            else k := LightMagenta;   { Person }
                end;
         ground:case Real_map(i,j) of
                   1..20 : k := White;
                   22    : k := LightCyan;
                   48    : k := LightBlue;
                   23,49 : k := Cyan;
                   50    : k := LightRed;
                   0     : if party.map = 4 then k := White else k := Black;
                   24..47: k := Black
                         else k := LightGreen;
                end;
         den  : case Real_map(i,j) of
                   1..40,51 : k := White;
                      54    : k := LightGreen;
                      53    : k := LightCyan;
                      48    : k := LightBlue;
                      49    : k := Cyan;
                      50    : k := LightRed;
                      52    : if party.map = 2 then k := LightBlue else k := Black;
                   0,41..47 : k := Black
                         else k := LightMagenta;
                end;
         keep : case Real_map(i,j) of
                   1..39,51 : k := White;
                      54    : k := LightGreen;
                      53    : k := LightCyan;
                      48    : k := LightBlue;
                      49    : k := Cyan;
                      50    : k := LightRed;
                0,52,40..47 : k := Black
                         else k := LightMagenta;
                end;
      end;
      PutPixel((i-x_init)*2+32,(j-y_init)*2+305,k);
   end;
   while keypressed do c := readkey;
   repeat
      if k = DarkGray then k := Yellow else k := DarkGray;
      PutPixel((x-x_init)*2+32,(y-y_init)*2+305,k);
   until keypressed and (k = DarkGray);
   while keypressed do c := readkey;
end;

Function Teleport : boolean;
begin
   if party.map in [15,16,17] then begin
      Print(13,'이 동굴의 악의 힘이 공간 이동을 방해 합니다.');
      Teleport := FALSE;
      exit;
   end;
   Teleport := FALSE;
   m[0] := '';
   Print(15,'<<<  방향을 선택하시오  >>>');
   m[1] := '북쪽';
   m[2] := '남쪽';
   m[3] := '동쪽';
   m[4] := '서쪽';
   for i := 1 to 4 do m[i] := m[i]+'으로 공간이동';
   x1 := 0; y1 := 0;
   k := Select(80,4,4,FALSE,TRUE);
   if k = 0 then exit;
   case k of
      1 : y1 := -1;
      2 : y1 := 1;
      3 : x1 := 1;
      4 : x1 := -1;
   end;
   Print(11,'당신의 공간 이동력을 지정');
   setcolor(15);
   HGotoXY(266,70);
   HPrint('## ');
   setcolor(10);
   HPrint('5000');
   setcolor(15);
   HPrint(' 공간 이동력');
   setcolor(10);
   k := 5;
   ok := FALSE;
   repeat
      j := 0;
      c := readkey;
      if c in [#13,#27] then ok := TRUE;
      if c = #0 then begin
         c := readkey;
         case c of
            #75,#80 : j := -1;
            #72,#77 : j := 1;
         end;
         if j <> 0 then begin
            k := k + j;
            if (k<1) or (k>9) then k := k - j
            else begin
               str(k,s);
               setfillstyle(1,8);
               bar(290,70,297,86);
               HPrintXY(290,70,s);
            end;
         end;
      end;
   until ok;
   if c = #27 then begin
      Clear;
      exit;
   end;
   x := x + k*x1; y := y + k*y1;
   if (x<5) or (x>=xmax-3) or (y<5) or (y>=ymax-3) then begin
      x := x - k*x1; y := y - k*y1;
      Message(7,'공간 이동이 통하지 않습니다.');
      exit;
   end;
   ok := FALSE;
   case position of
      town : if Real_map(x,y) in [27..47] then ok := TRUE;
      ground : if Real_map(x,y) in [24..47] then ok := TRUE;
      den : if Real_map(x,y) in [41..47] then ok := TRUE;
      keep : if Real_map(x,y) in [27..47] then ok := TRUE;
   end;
   if not ok then begin
      x := x - k*x1; y := y - k*y1;
      Message(7,'공간 이동 장소로 부적합 합니다.');
      exit;
   end;
   if (Real_map(x,y) = 0) or
      ((position in [den,keep]) and (Real_map(x+x1,y+y1) = 52)) then begin
      x := x - k*x1; y := y - k*y1;
      Message(13,'알수없는 힘이 당신을 배척합니다.');
   end
   else begin
      x := x - k*x1; y := y - k*y1;
      for i := 1 to k-1 do begin
         x := x + x1; y := y + y1;
         Scroll(FALSE);
      end;
      x := x + x1; y := y + y1;
      Message(15,'공간 이동 마법이 성공했습니다.');
      Scroll(TRUE);
   end;
   Teleport := TRUE;
end;

Procedure PhenominaSpell;

 Procedure SPnotEnough;
 begin
    Message(7,'마법 지수가 충분하지 않습니다.');
 end;

var
   x_init,y_init,x_end,y_end : integer;
   ok : boolean;
begin
   if player[person].classtype = sword then begin
      s := player[person].name+ReturnSJosa(player[person].name);
      Message(7,s+' 변화 마법을 사용하는 계열이 아닙니다.');
      exit;
   end;
   m[0] := '선택';
   for i := 1 to 10 do m[i] := ReturnMagic(2,i);
   j := player[person].pheno_magic div 10;
   if j > 10 then j := 10;
   k := Select(60,j,10,TRUE,TRUE);
   if k = 0 then exit;
   case k of
      1 : begin
             if player[person].sp < 1 then begin
                SPnotEnough;
                exit;
             end;
             if party.etc[1] + (player[person].pheno_magic div 10) < 256 then
                party.etc[1] := party.etc[1] + (player[person].pheno_magic div 10)
             else
                party.etc[1] := 255;
             Message(15,'일행은 마법의 횃불을 밝혔습니다.');
             dec(player[person].sp);
             Scroll(TRUE);
          end;
      2 : begin
             if player[person].sp < 5 then begin
                SPnotEnough;
                exit;
             end;
             player[person].sp := player[person].sp - 5;
             Wizard_Eye;
          end;
      3 : begin
             if player[person].sp < 5 then begin
                SPnotEnough;
                exit;
             end;
             Message(15,'일행은 공중부상중 입니다.');
             party.etc[4] := 255;
             player[person].sp := player[person].sp - 5;
          end;
      4 : begin
             if player[person].sp < 10 then begin
                SPnotEnough;
                exit;
             end;
             Message(15,'일행은 물위를 걸을수 있습니다.');
             party.etc[2] := 255;
             player[person].sp := player[person].sp - 10;
          end;
      5 : begin
             if player[person].sp < 20 then begin
                SPnotEnough;
                exit;
             end;
             Message(15,'일행은 늪위를 걸을수 있습니다.');
             party.etc[3] := 255;
             player[person].sp := player[person].sp - 20;
          end;
      6 : begin
             if party.map in [15,16,17] then begin
                Print(13,'이 동굴의 악의 힘이 기화 이동을 방해 합니다.');
                exit;
             end;
             if player[person].sp < 25 then begin
                SPnotEnough;
                exit;
             end;
             m[0] := '';
             Print(15,'<<<  방향을 선택하시오  >>>');
             m[1] := '북쪽';
             m[2] := '남쪽';
             m[3] := '동쪽';
             m[4] := '서쪽';
             for i := 1 to 4 do m[i] := m[i]+'으로 기화 이동';
             k := Select(80,4,4,FALSE,TRUE);
             x1 := 0; y1 := 0;
             if k = 0 then exit;
             case k of
                1 : y1 := -1;
                2 : y1 := 1;
                3 : x1 := 1;
                4 : x1 := -1;
             end;
             x := x + 2*x1; y := y + 2*y1;
             if (x<5) or (x>=xmax-3) or (y<5) or (y>=ymax-3) then begin
                x := x - 2*x1; y := y - 2*y1;
                exit;
             end;
             ok := FALSE;
             case position of
                town : if Real_map(x,y) in [0,27..47] then ok := TRUE;
                ground : if Real_map(x,y) in[0,24..47] then ok := TRUE;
                den : if Real_map(x,y) in[0,41..47] then ok := TRUE;
                keep : if Real_map(x,y) in[0,40..47] then ok := TRUE;
             end;
             if not ok then begin
                x := x - 2*x1; y := y - 2*y1;
                Message(7,'기화 이동이 통하지 않습니다.');
                exit;
             end;
             player[person].sp := player[person].sp - 25;
             if (Real_Map(x-x1,y-y1) = 0) or
             ((position in [den,keep]) and (Real_map(x+x1,y+y1) = 52)) then begin
                x := x - 2*x1; y := y - 2*y1;
                Message(13,'알수없는 힘이 당신의 마법을 배척합니다.');
             end
             else begin
                x := x - x1; y := y - y1;
                Scroll(FALSE);
                x := x + x1; y := y + y1;
                Message(15,'기화 이동을 마쳤습니다.');
                Scroll(TRUE);
             end;
          end;
      7 : begin
             if party.map in [4,15,16,17] then begin
                Print(13,'이 지역의 악의 힘이 지형 변화를 방해 합니다.');
                exit;
             end;
             if player[person].sp < 30 then begin
                SPnotEnough;
                exit;
             end;
             m[0] := '';
             Print(15,'<<<  방향을 선택하시오  >>>');
             m[1] := '북쪽';
             m[2] := '남쪽';
             m[3] := '동쪽';
             m[4] := '서쪽';
             for i := 1 to 4 do m[i] := m[i]+'에 지형 변화';
             x1 := 0; y1 := 0;
             k := Select(80,4,4,FALSE,TRUE);
             if k = 0 then exit;
             case k of
                1 : y1 := -1;
                2 : y1 := 1;
                3 : x1 := 1;
                4 : x1 := -1;
             end;
             case position of
                town : k := 47;
                ground : k := 41;
                den : k := 43;
                keep : k := 43;
             end;
             player[person].sp := player[person].sp - 30;
             if (Real_map(x+x1,y+y1) = 0) or
             ((position in [den,keep]) and (Real_map(x+x1,y+y1) = 52)) then begin
                x1 := 0; y1 := 0;
                Message(13,'알수없는 힘이 당신의 마법을 배척합니다.');
             end
             else if (position = town) and (Real_map(x+x1,y+y1) >= 48) then begin
                x1 := 0; y1 := 0;
             end
             else begin
                Putmap(x+x1,y+y1,k);
                Message(15,'지형 변화에 성공했습니다.');
                Scroll(TRUE);
             end;
          end;
      8 : begin
             if player[person].sp < 50 then begin
                SPnotEnough;
                exit;
             end;
             if Teleport then player[person].sp := player[person].sp - 50;
          end;
      9 : begin
             if player[person].sp < 30 then begin
                SPnotEnough;
                exit;
             end;
             j := 0;
             for i := 1 to 6 do if player[i].name <> '' then inc(j);
             if party.food + j > 255 then party.food := 255
             else party.food := party.food + j;
             player[person].sp := player[person].sp - 30;
             str(j,s);
             hany := 30;
             Print(15,' 식량 제조 마법은 성공적으로 수행되었습니다');
             hany := hany + 20;
             str(j,s);
             Print(15,'            '+s+' 개의 식량이 증가됨');
             hany := hany + 30;
             str(party.food,s);
             Print(11,'      일행의 현재 식량은 '+s+' 개 입니다');
          end;
      10: begin
             if party.map in [4,15,16,17] then begin
                Print(13,'이 지역의 악의 힘이 지형 변화를 방해 합니다.');
                exit;
             end;
             if player[person].sp < 60 then begin
                SPnotEnough;
                exit;
             end;
             m[0] := '';
             Print(15,'<<<  방향을 선택하시오  >>>');
             m[1] := '북쪽';
             m[2] := '남쪽';
             m[3] := '동쪽';
             m[4] := '서쪽';
             for i := 1 to 4 do m[i] := m[i]+'에 지형 변화';
             x1 := 0; y1 := 0;
             k := Select(80,4,4,FALSE,TRUE);
             if k = 0 then exit;
             case k of
                1 : y1 := -1;
                2 : y1 := 1;
                3 : x1 := 1;
                4 : x1 := -1;
             end;
             case position of
                town : k := 47;
                ground : k := 41;
                den : k := 43;
                keep : k := 43;
             end;
             player[person].sp := player[person].sp - 60;
             j := 0;
             if x1 = 0 then h := 5 else h := 4;
             repeat
                inc(j);
                if (Real_map(x+x1*j,y+y1*j) = 0) or
                ((position in [den,keep]) and (Real_map(x+x1*j,y+y1*j) = 52)) then begin
                   x1 := 0; y1 := 0;
                   Message(13,'알수없는 힘이 당신의 마법을 배척합니다.');
                   j := h+1;
                end
                else if (position = town) and (Real_map(x+x1*j,y+y1*j) >= 48) then begin
                   x1 := 0; y1 := 0;
                   j := h+1;
                end
                else begin
                   Putmap(x+x1*j,y+y1*j,k);
                end;
             until j >= h;
             if j = h then Message(15,'지형 변화에 성공했습니다.');
             Silent_Scroll;
          end;
   end;
   displaySP;
end;

Procedure ViewParty;

 Procedure ViewPartySub(i:integer);
 begin
    s := ' 가능'; if party.etc[i] = 0 then s := ' 불가';
 end;

var
   X_Pos, Y_Pos : integer;
   s1,s2,s3 : string[10];
begin
   setcolor(7);
   with party do begin
      X_Pos := 270;
      str(x,s); HPrintXY(X_Pos,45,'X 축 = '+s);
      str(y,s); HPrintXY(X_Pos,60,'Y 축 = '+s);
      str(food,s); HPrintXY(X_Pos,80,'남은 식량 = '+s);
      str(gold,s); HPrintXY(X_Pos,95,'남은 황금 = '+s);
      str(arrow,s); HPrintXY(X_Pos,115,'남은 화살 = '+s);
      X_Pos := 430;
      ViewPartySub(1);
      HPrintXY4Select(X_Pos,80,'마법의 횃불 :'+s);
      ViewPartySub(4);
      HPrintXY4Select(X_Pos,95,'공중 부상   :'+s);
      ViewPartySub(2);
      HPrintXY4Select(X_Pos,115,'물위를 걸음 :'+s);
      ViewPartySub(3);
      HPrintXY4Select(X_Pos,130,'늪위를 걸음 :'+s);
      X_Pos := 270;
      str(item[1],s);
      HPrintXY4Select(X_Pos,150,'체력 회복약 : '+s);
      str(item[2],s);
      HPrintXY4Select(X_Pos,165,'마법 회복약 : '+s);
      str(item[3],s);
      HPrintXY4Select(X_Pos,180,'해독의 약초 : '+s);
      str(item[4],s);
      HPrintXY4Select(X_Pos,195,'의식의 약초 : '+s);
      str(item[5],s);
      HPrintXY4Select(X_Pos,210,'부활의 약초 : '+s);
      X_Pos := 430;
      str(item[6],s);
      HPrintXY4Select(X_Pos,150,'소환 문서 : '+s);
      str(item[7],s);
      HPrintXY4Select(X_Pos,165,'대형 횃불 : '+s);
      str(item[8],s);
      HPrintXY4Select(X_Pos,180,'수정 구슬 : '+s);
      str(item[9],s);
      HPrintXY4Select(X_Pos,195,'비행 부츠 : '+s);
      str(item[10],s);
      HPrintXY4Select(X_Pos,210,'이동 구슬 : '+s);
      X_Pos := 270;
      str(year,s1);
      str((day div 30)+1,s2);
      str((day mod 30)+1,s3);
      HPrintXY4Select(X_Pos,240,s1+' 년 '+s2+' 월 '+s3+' 일');
      str(hour,s1);
      str(min,s2);
      HPrintXY4Select(X_Pos,255,s1+' 시 '+s2+' 분');
   end;
end;

Procedure ViewCharacter;

 Function ChooseWhom(clean : boolean) : integer;
 var
    i,j,k : integer;
 begin
    m[0] := '';
    j := 0;
    for i := 1 to 6 do
    if player[i].name <> '' then begin
       inc(j);
       m[j] := player[i].name;
    end;
    SetColor(10);
    HPrintXY(265,70,'한명을 고르시오 ---');
    k := Select(106,j,j,clean,TRUE);
    if k = 0 then begin
       ChooseWhom := 0;
       exit;
    end;
    j := 0;
    for i := 1 to 6 do
    if player[i].name <> '' then begin
       inc(j);
       if j = k then ChooseWhom := i;
    end;
 end;

const
   X_Pos = 260;
begin
   Clear;
   hany := 30;
   print(15,'능력을 보고싶은 인물을 선택하시오');
   i := ChooseWhom(FALSE);
   Clear;
   if i = 0 then Exit;
   with player[i] do begin
      setcolor(11);
      HPrintXY4Select(X_Pos,30,'# 이름 : '+name);
      HPrintXY4Select(X_Pos,46,'# 성별 : '+ReturnSex(i));
      HPrintXY4Select(X_Pos,62,'# 계급 : '+ReturnClass(i));
      setcolor(3);
      str(strength,s);
      HPrintXY4Select(X_Pos+4,88,'체  력 : '+s);
      str(mentality,s);
      HPrintXY4Select(X_Pos+4,104,'정신력 : '+s);
      str(concentration,s);
      HPrintXY4Select(X_Pos+4,120,'집중력 : '+s);
      str(endurance,s);
      HPrintXY4Select(X_Pos+4,136,'인내력 : '+s);
      str(resistance,s);
      HPrintXY4Select(X_Pos+4,152,'저항력 : '+s);
      str(agility,s);
      HPrintXY4Select(X_Pos+4,168,'민첩성 : '+s);
      str(accuracy,s);
      HPrintXY4Select(X_Pos+4,184,'정확성 : '+s);
      str(luck,s);
      HPrintXY4Select(X_Pos+4,200,'행운   : '+s);
      SetColor(2);
      j := X_Pos+160;
      if classtype = sword then begin
         str(sword_skill,s);
         HPrintXY4Select(j,88,'베는 무기  기술치  : '+s);
         str(axe_skill,s);
         if class <> 7 then
            HPrintXY4Select(j,104,'찍는 무기  기술치  : '+s)
         else
            HPrintXY4Select(j,104,'치료 마법  능력치  : '+s);
         str(spear_skill,s);
         HPrintXY4Select(j,120,'찌르는 무기 기술치 : '+s);
         str(bow_skill,s);
         HPrintXY4Select(j,136,'쏘는 무기  기술치  : '+s);
         str(shield_skill,s);
         HPrintXY4Select(j,152,'방패 사용  기술치  : '+s);
         str(fist_skill,s);
         HPrintXY4Select(j,168,'맨손 사용  기술치  : '+s);
      end
      else if classtype = magic then begin
         str(attack_magic,s);
         HPrintXY4Select(j,88,'공격 마법 능력치 : '+s);
         str(pheno_magic,s);
         HPrintXY4Select(j,104,'변화 마법 능력치 : '+s);
         str(cure_magic,s);
         HPrintXY4Select(j,120,'치료 마법 능력치 : '+s);
         str(special_magic,s);
         HPrintXY4Select(j,136,'특수 마법 능력치 : '+s);
         str(esp_magic,s);
         HPrintXY4Select(j,152,'초 자연력 능력치 : '+s);
         str(summon_magic,s);
         HPrintXY4Select(j,168,'소환 마법 능력치 : '+s);
      end;
      setcolor(3);
      str(experience,s);
      HPrintXY4Select(X_Pos+4,216,'## 경험치 : '+s);
      str(level,s);
      HPrintXY4Select(X_Pos+220,216,'## 레벨 : '+s);
      setcolor(2);
      HPrintXY4Select(X_Pos+4,240,'사용 무기 - '+ReturnWeapon(player[i].weapon));
      if shield <> 0 then
         HPrintXY4Select(X_Pos+4,256,'방패 - '+ReturnShield(shield));
      if armor <> 0 then
         HPrintXY4Select(X_Pos+196,256,'갑옷 - '+ReturnArmor(armor));
   end;
end;

Procedure QuickView;
const
   X_Pos = 270;
var
   color : integer;
begin
   color := GetColor;
   setcolor(15);
   HPrintXY(X_Pos+30,40,'이름');
   setcolor(12);
   HPrintXY(X_Pos+150,40,' 중독 의식불명 죽음');
   setcolor(7);
   for j:= 1 to 6 do
   with player[j] do
   if name <> '' then begin
      HPrintXY4Select(X_Pos,60+j*15,name);
      str(poison,s);
      HPrintXY4Select(X_Pos+174,60+j*15,s);
      str(unconscious : 3,s);
      HPrintXY4Select(X_Pos+214,60+j*15,s);
      str(dead : 5,s);
      HPrintXY4Select(X_Pos+250,60+j*15,s);
   end;
end;

Procedure CastSpell;
begin
   person := ChooseWhom(FALSE);
   if person = 0 then exit;
   if not exist(person) then begin
      ReturnSexData;
      Message(7,SexData+'는 마법을 사용할수있는 상태가 아닙니다');
      exit;
   end;
   if (player[person].classtype = sword) and (player[person].class <> 7) then begin
      s := player[person].name+ReturnSJosa(player[person].name);
      Message(7,s+' 마법을 사용할 수 없는 계열입니다.');
      exit;
   end;
   m[0] := '사용할 마법의 종류 ===>';
   m[1] := '치료 마법';
   m[2] := '변화 마법';
   k := Select(80,2,2,TRUE,TRUE);
   case k of
      1 : CureSpell;
      2 : PhenominaSpell;
   end;
end;

Function ReturnPredict : integer;
var
   Return : integer;
begin
   Return := 0;
   with party do begin
      case etc[10] of
         0 : Return := 1;
         1 : Return := 2;
         2 : Return := 3;
         3 : Return := 4;
         4 : Return := 5;
         5 : case etc[11] of
                0 : Return := 6;
                1 : Return := 7;
                2 : Return := 8;
                3 : Return := 9;
                4 : Return := 8;
                5 : Return := 3;
             end;
         6 : Return := 3;
         7 : Return := 1;
         8 : Return := 10;
         9 : begin
                Return := 15;
                if etc[9] and bit4 = 0 then Return := 14;
                if etc[9] and bit3 = 0 then Return := 13;
                if etc[9] and bit2 = 0 then Return := 12;
                if etc[9] and bit1 = 0 then Return := 11;
             end;
         10: Return := 3;
         11: Return := 16;
         12: begin
                Return := 15;
                if etc[9] and bit7 = 0 then Return := 18;
                if etc[9] and bit6 = 0 then Return := 17;
                if etc[9] and bit5 = 0 then Return := 11;
             end;
         13: Return := 3;
         14: Return := 19;
         15: begin
                Return := 22;
                if etc[9] and bit3 = 0 then Return := 21;
                if etc[9] and bit2 = 0 then Return := 20;
                if etc[9] and bit1 = 0 then Return := 11;
             end;
         16: begin
                Return := 22;
             end;
      end;
   end;
   ReturnPredict := Return;
end;

Procedure Extrasense;

 Procedure ESPnotEnough;
 begin
    Message(7,'마법 지수가 충분하지 않습니다.');
 end;

const
   Max_Predict_Data = 21;
   Predict_Data : array [1..Max_Predict_Data] of string =
                  ('로드 안을 만날',
                   '메너스로 갈',
                   '다시 로드 안에게 갈',
                   '다시 메너스를 조사할',
                   '다시 로어 성으로 돌아갈',
                   '라스트 디치의 성주를 만날',
                   '피라미드 속의 로어 헌터를 찾을',
                   '라스트 디치의 군주에게로 돌아갈',
                   '피라미드 속의 두 동굴에서 두개의 석판을 찾을',
                   '첫번째 월식을 기다릴',
                   '메너스를 통해 지하 세계로 갈',
                   '빛의 지붕을 방문할 것',
                   '빛의 사원에서 악의 추종자들의 메세지를 볼',
                   '필멸의 생존을 탐험할 것',
                   '지하 세계 중앙의 통로를 통해 지상으로 갈',
                   '두번째 월식을 기다릴',
                   '베리알의 동굴에서 결전을 벌일',
                   '몰록의 동굴에서 결전을 벌일',
                   '마지막 세번째 월식을 기다릴',
                   '아스모데우스의 동굴에서 결전을 벌일',
                   '메피스토펠레스와 대결을 벌일');

var
   i,j,k : integer;
label
   Exit_For;
begin
   Clear;
   person := ChooseWhom(FALSE);
   if person = 0 then exit;
   ReturnSexData;
   if not exist(person) then begin
      Message(7,SexData+'는 초감각을 사용할수있는 상태가 아닙니다');
      exit;
   end;
   if player[person].classtype = sword then begin
      Print(7,SexData+'에게는 초감각의 능력이 없습니다.');
      exit;
   end;
   m[0] := '사용할 초감각의 종류 ===>';
   for j := 1 to 5 do m[j] := ReturnMagic(5,j);
   k := Select(74,5,5,TRUE,TRUE);
   if k = 5 then begin
      Message(7,ReturnMagic(5,5)+'은 전투에서만 사용됩니다.');
      exit;
   end;
   case k of
      1 : begin
             if player[person].esp_magic < 70 then begin
                Print(7,SexData+'는 투시를 시도해 보았지만 아직은 역부족이었다.');
                exit;
             end;
             if player[person].sp < 10 then begin
                ESPnotEnough;
                exit;
             end;
             move(font^[0],font^[55],246);
             for i := 5 to 246 do font^[0,i] := 0;
             if position in [den,keep] then begin
                move(font^[52],chara^[55],246);
                for i := 5 to 246 do font^[52,i] := 0;
             end;
             Silent_Scroll;
             Print(15,'일행은 주위를 투시하고 있다.');
             PressAnyKey;
             move(font^[55],font^[0],246);
             if position in [den,keep] then move(chara^[55],font^[52],246);
             Silent_Scroll;
             player[person].sp := player[person].sp - 10;
          end;
      2 : begin
             if player[person].esp_magic < 10 then begin
                Print(7,SexData+'는 예언을 시도해 보았지만 아직은 역부족이었다.');
                exit;
             end;
             if player[person].sp < 5 then begin
                ESPnotEnough;
                exit;
             end;
             Print(7,' 당신은 당신의 미래를 예언한다 ...');
             Print(7,'');
             k := ReturnPredict;
             if k in [1..Max_Predict_Data] then
                s := '당신은 ' + Predict_Data[k] + ' 것이다'
             else
                s := '당신은 어떤 힘에 의해 예언을 방해 받고 있다';
             cPrint(10,15,' # ',s,'');
             player[person].sp := player[person].sp - 5;
          end;
      3 : begin
             if player[person].esp_magic < 40 then begin
                Print(7,SexData+'는 독심을 시도해 보았지만 아직은 역부족이었다.');
                exit;
             end;
             if player[person].sp < 20 then begin
                ESPnotEnough;
                exit;
             end;
             Message(15,'당신은 잠시동안 다른 사람의 마음을 읽을수 있다.');
             party.etc[5] := 3;
          end;
      4 : begin
             if player[person].esp_magic < 55 then begin
                Print(7,SexData+'는 천리안을 시도해 보았지만 아직은 역부족이었다.');
                exit;
             end;
             if player[person].sp < player[person].level * 5 then begin
                ESPnotEnough;
                exit;
             end;
             m[0] := '';
             Print(15,'<<<  방향을 선택하시오  >>>');
             m[1] := '북쪽';
             m[2] := '남쪽';
             m[3] := '동쪽';
             m[4] := '서쪽';
             for i := 1 to 4 do m[i] := m[i]+'으로 천리안을 사용';
             k := Select(80,4,4,FALSE,TRUE);
             x1 := 0; y1 := 0;
             if k = 0 then exit;
             player[person].sp := player[person].sp - player[person].level * 5;
             case k of
                1 : y1 := -1;
                2 : y1 := 1;
                3 : x1 := 1;
                4 : x1 := -1;
             end;
             party.xaxis := x; party.yaxis := y;
             Aux := SoundOn;
             SoundOn := FALSE;
             hany := 30;
             print(15,'천리안의 사용중 ...');
             setcolor(14);
             HPrintXY4Select(250,184,'아무키나 누르시오 ...');
             for i := 1 to player[person].level do begin
                x := x + x1; y := y + y1;
                if (x<5) or (x>=xmax-3) or (y<5) or (y>=ymax-3) then begin
                   x := x - x1; y := y - y1;
                end
                else begin
                   Scroll(FALSE);
                   c := readkey;
                   if c = #0 then c := readkey;
                   if c = #27 then goto Exit_For;
                end;
             end;
Exit_For:
             Clear;
             x := party.xaxis; y := party.yaxis;
             SoundOn := Aux;
             Scroll(TRUE);
          end;
   end;
   DisplaySP;
end;

Procedure Rest;
var
   long : longint;
   ok : boolean;
begin
   Clear;
   Print(11,'일행이 여기서 쉴 시간을 지정 하십시오.');
   setcolor(15);
   HGotoXY(266,70);
   HPrint('## ');
   setcolor(10);
   str(Rest_Time : 2,s);
   HPrint(s);
   setcolor(15);
   HPrint(' 시간 동안');
   setcolor(10);
   ok := FALSE;
   repeat
      j := 0;
      c := readkey;
      if c in [#13,#27] then ok := TRUE;
      if c = #0 then begin
         c := readkey;
         case c of
            #75,#80 : j := -1;
            #72,#77 : j := 1;
         end;
         if j <> 0 then begin
            Rest_Time := Rest_Time + j;
            if (Rest_Time<1) or (Rest_Time>24) then Rest_Time := Rest_Time - j
            else begin
               str(Rest_Time : 2,s);
               setfillstyle(1,8);
               bar(290,70,305,86);
               HPrintXY(290,70,s);
            end;
         end;
      end;
   until ok;
   Clear;
   if c = #27 then exit;

   for person := 1 to 6 do
   with player[person] do
   if name <> '' then begin
      if sex = male then s := '그의' else s := '그녀의';
      if party.food <= 0 then Print(4,'일행은 식량이 바닥났다')
      else if dead > 0 then Print(7,name+ReturnSJosa(name)+' 죽었다')
      else if (unconscious>0) and (poison=0) then begin
         unconscious := unconscious - level*(Rest_Time div 2);
         if unconscious <= 0 then begin
            Print(15,name+ReturnSJosa(name)+' 의식이 회복되었다');
            unconscious := 0;
            if hp <= 0 then hp := 1;
            dec(party.food);
         end
         else Print(15,name+ReturnSJosa(name)+' 여전히 의식 불명이다');
      end
      else if (unconscious>0) and (poison>0) then
         Print(7,'독때문에, '+name+' '+s+' 의식은 회복되지 않았다')
      else if poison > 0 then
         Print(7,'독때문에, '+name+' '+s+' 건강은 회복되지 않았다')
      else begin
         i := level * Rest_Time;
         if hp >= (endurance * level * 10) then if party.food < 255 then inc(party.food);
         hp := hp + i;
         if hp >= (endurance * level * 10) then begin
            hp := endurance * level * 10;
            Print(15,name+ReturnSJosa(name)+' 모든 건강이 회복되었다');
         end
         else Print(15,name+ReturnSJosa(name)+' 치료되었다');
         dec(party.food);
      end;
   end;
   if party.etc[1] > 0 then begin
      i := Rest_Time div 3 + 1;
      if party.etc[1] >= i then party.etc[1] := party.etc[1] - i
      else party.etc[1] := 0;
   end;
   for i := 2 to 4 do party.etc[i] := 0;
   for i := 1 to 6 do
   with player[i] do
   if exist(i) then begin
      if classtype = magic then sp := mentality * level * 10
      else if (classtype = sword) and (class = 7) then sp := mentality * level * 5
      else sp := 0;
   end;

   Print(7,'');
   for k := 1 to 6 do
   if exist(k) then begin
      long := player[k].potential_experience;
      j := 0;
      repeat
         inc(j);
      until (long < ReturnEXP(j)) or (j > 40);
      dec(j);
      if (player[k].level < j) or (j = 40) then begin
         if (j < 40) or (player[k].level <> 40) then begin
            str(j,s);
            Print(11,player[k].name+'의 레벨은 '+s+' 입니다');
            player[k].level := j;
         end;
      end;
   end;

   SimpleDisCond;
   PlusTime(Rest_Time,0,0);
end;

Procedure Exchange;
var
   sort : byte;

 Procedure swap(var i,j : byte);
 var
    temp : byte;
 begin
    temp := i;
    i := j;
    j := temp;
 end;

begin
   m[0] := '서로 바꿀 물품을 고르시오';
   m[1] := '사용중인 무기';
   m[2] := '사용중인 방패';
   m[3] := '사용중인 갑옷';
   sort := select(95,3,3,TRUE,TRUE);
   case sort of
      1 : s := '무기를';
      2 : s := '방패를';
      3 : s := '갑옷을'
      else exit;
   end;
   setcolor(11);
   HPrintXY(275,70,s+' 바꿀 일원');
   m[0] := '';
   for i := 1 to 5 do
   if player[i].name <> '' then m[i] := player[i].name
   else m[i] := '빈자리';
   j := select(95,5,5,FALSE,FALSE);
   if (j = 0) or (m[j] = 'Reserved') then begin
      clear; exit;
   end;
   setcolor(11);
   HPrintXY(465,70,s+' 바꿀 일원');
   for i := 1 to 5 do m[i] := '                        '+m[i];
   k := select(95,5,5,FALSE,FALSE);
   if (k = 0) or (player[k].name = '') then begin
      clear; exit;
   end;
   case sort of
      1 : swap(player[j].weapon,player[k].weapon);
      2 : swap(player[j].shield,player[k].shield);
      3 : swap(player[j].armor,player[k].armor);
   end;
   Modify_Item(j);
   Modify_Item(k);
   Display_Condition;
   clear;
end;

Procedure Use_Item(select_num : byte);

 Procedure Use_1;
 begin
    with player[person] do begin
       hp := hp + 1000;
       if hp > endurance * level * 10 then begin
          Print(15,' '+name+ReturnSJosa(name)+' 모든 건강이 회복 되었습니다.');
          hp := endurance * level * 10;
       end
       else Print(15,' '+name+ReturnSJosa(name)+' 건강이 회복 되었습니다.');
    end;
    Display_Condition;
 end;

 Procedure Use_2;
 begin
    if (player[person].classtype <> magic) and (player[person].class <> 7) then begin
       Print(7,' '+player[person].name+ReturnSJosa(player[person].name)+' 마법사 계열이 아닙니다.');
       exit;
    end;
    with player[person] do begin
       if classtype = magic then begin
          sp := sp + 1000;
          if sp > mentality * level * 10 then begin
             Print(15,' '+name+ReturnSJosa(name)+' 모든 마법 지수가 회복 되었습니다.');
             sp := mentality * level * 10;
          end
          else Print(15,' '+name+ReturnSJosa(name)+' 마법 지수가 회복 되었습니다.');
       end
       else begin
          sp := sp + 1000;
          if sp > mentality * level * 5 then begin
             Print(15,' '+name+ReturnSJosa(name)+' 모든 마법 지수가 회복 되었습니다.');
             sp := mentality * level * 5;
          end
          else Print(15,' '+name+ReturnSJosa(name)+' 마법 지수가 회복 되었습니다.');
       end;
    end;
    Display_Condition;
 end;

 Procedure Use_3;
 begin
    with player[person] do begin
       if poison = 0 then begin
          Print(7,' '+name+ReturnSJosa(name)+' 중독 되지 않았습니다.');
          exit;
       end;
       poison := 0;
       Print(15,' '+name+ReturnSJosa(name)+' 해독 되었습니다.');
    end;
    Display_Condition;
 end;

 Procedure Use_4;
 begin
    k := ChooseWhom(FALSE);
    with player[k] do begin
       if unconscious = 0 then begin
          Print(7,' '+name+ReturnSJosa(name)+' 의식이 있습니다.');
          exit;
       end;
       unconscious := 0;
       if dead = 0 then begin
          Print(15,' '+name+ReturnSJosa(name)+' 의식을 차렸습니다.');
          if hp <= 0 then hp := 1;
       end else
          Print(7,' '+name+ReturnSJosa(name)+' 이미 죽은 상태 입니다.');
    end;
    Display_Condition;
 end;

 Procedure Use_5;
 begin
    k := ChooseWhom(FALSE);
    with player[k] do begin
       if dead = 0 then begin
          Print(7,' '+name+ReturnSJosa(name)+' 죽지 않았습니다.');
          exit;
       end;
       if dead < 10000 then begin
          dead := 0;
          if unconscious >= endurance * level then unconscious := endurance * level - 1;
          Print(15,' '+name+ReturnSJosa(name)+' 다시 살아났습니다.');
       end else begin
          Print(7,' '+name+'의 죽음은 이 약초로는 살리지 못합니다.');
       end;
    end;
    Display_Condition;
 end;

 Procedure Use_6;

  function r(seed : byte) : integer;
  begin
     r := random(seed*2+1)-seed;
  end;

 var
    i,j,ability : word;
 begin
    ability := 0; j := 0;
    for i := 1 to 5 do begin
       if exist(i) then begin
          j := j + 1;
          ability := ability + player[i].level;
       end;
    end;
    ability := round(ability * 5 / j);
    with player[6] do begin
       case random(8) of
          0 : begin
                 name := '밴더스내치';
                 endurance := 15+r(5);
                 resistance := 8+r(5);
                 accuracy := 12+r(5);
                 weapon := 33;
                 wea_power := ability * 3;
                 potential_ac := 3;
                 ac := 3;
              end;
          1 : begin
                 name := '캐리온 크롤러';
                 endurance := 20+r(5);
                 resistance := 14+r(5);
                 accuracy := 13+r(5);
                 weapon := 34;
                 wea_power := ability * 1;
                 potential_ac := 3;
                 ac := 3;
              end;
          2 : begin
                 name := '켄타우루스';
                 endurance := 17+r(5);
                 resistance := 12+r(5);
                 accuracy := 18+r(2);
                 weapon := 35;
                 wea_power := round(ability * 1.5);
                 potential_ac := 2;
                 ac := 2;
              end;
          3 : begin
                 name := '데모고르곤';
                 endurance := 18+r(5);
                 resistance := 5+r(5);
                 accuracy := 17+r(3);
                 weapon := 36;
                 wea_power := ability * 4;
                 potential_ac := 4;
                 ac := 4;
              end;
          4 : begin
                 name := '듈라한';
                 endurance := 10+r(5);
                 resistance := 20;
                 accuracy := 17;
                 weapon := 16;
                 wea_power := ability * 1;
                 potential_ac := 3;
                 ac := 3;
              end;
          5 : begin
                 name := '에틴';
                 endurance := 10+r(5);
                 resistance := 10;
                 accuracy := 10+r(9);
                 weapon := 8;
                 wea_power := round(ability * 0.8);
                 potential_ac := 1;
                 ac := 1;
              end;
          6 : begin
                 name := '헬하운드';
                 endurance := 14+r(5);
                 resistance := 9+r(5);
                 accuracy := 11+r(5);
                 weapon := 33;
                 wea_power := ability * 3;
                 potential_ac := 2;
                 ac := 2;
              end;
          7 : begin
                 name := '미노타우루스';
                 endurance := 13+r(5);
                 resistance := 11+r(5);
                 accuracy := 14+r(5);
                 weapon := 9;
                 wea_power := ability * 3;
                 potential_ac := 2;
                 ac := 2;
              end;
       end;
       sex := neutral;
       class := 0;
       classtype := unknown;
       strength := 10+r(5);
       level := ability div 5;
       strength := 10+r(5);
       mentality := 10+r(5);
       concentration := 10+r(5);
       agility := 0;
       luck := 10+r(5);
       poison := 0;
       unconscious := 0;
       dead := 0;
       hp := endurance * level * 10;
       sp := 0;
       experience := 0;
       potential_experience := 0;
       shield := 0;
       shi_power := 0;
       armor := 0;
       sword_skill := 0;
       axe_skill := 0;
       spear_skill := 0;
       bow_skill := 0;
       shield_skill := 0;
       fist_skill := 0;
       Display_Condition;
    end;
    Print(15,player[6].name+ReturnSJosa(player[6].name)+' 다른 차원으로 부터 소환 되어졌습니다.');
 end;

 Procedure Use_7;
 begin
    if party.etc[1] + 10 > 255 then party.etc[1] := 255
    else party.etc[1] := party.etc[1] + 10;
    Print(15,' 일행은 대형 횃불을 켰습니다.');
    Silent_Scroll;
 end;

 Procedure Use_8;
 begin
    Wizard_Eye;
 end;

 Procedure Use_9;
 begin
    party.etc[2] := 255;
    party.etc[3] := 255;
    party.etc[4] := 255;
    Print(15,' 일행은 모두 비행 부츠를 신었습니다.');
 end;

 Procedure Use_10;
 begin
    Teleport;
 end;

var
   _select : integer;
   remember : string;
begin
   m[0] := '사용할 물품을 고르시오.';
   m[1] := '체력 회복약';
   m[2] := '마법 회복약';
   m[3] := '해독의 약초';
   m[4] := '의식의 약초';
   m[5] := '부활의 약초';
   m[6] := '소환 문서';
   m[7] := '대형 횃불';
   m[8] := '수정 구슬';
   m[9] := '비행 부츠';
   m[10] := '이동 구슬';
   _select := Select(70,select_num,select_num,TRUE,TRUE);
   if _select = 0 then exit;
   remember := m[_select];
   if party.item[_select] = 0 then begin
      if _select in [1,2,7,8,10] then s := '이' else s := '가';
      Print(7,' 하지만 '+remember+s+' 없습니다.');
      PressAnyKey;
      exit;
   end;
   dec(party.item[_select]);
   case _select of
      1 : Use_1;
      2 : Use_2;
      3 : Use_3;
      4 : Use_4;
      5 : Use_5;
      6 : Use_6;
      7 : Use_7;
      8 : Use_8;
      9 : Use_9;
      10: Use_10;
   end;
   if _select <> 8 then begin
      str(party.item[_select],s);
      SetColor(3);
      HPrintXY4Select(hwinx1,256,' '+remember+ReturnSJosa(remember)+' 이제 '+s+'개 남았습니다.');
      if party.etc[6] = 1 then PressAnyKey;
   end;
end;

Procedure GameOption;
var
   i : integer;
begin
   m[0] := '게임 선택 상황';
   m[1] := '난이도 조절';
   m[2] := '정식 일행의 순서 정렬';
   m[3] := '일행의 장비를 해제';
   m[4] := '일행에서 제외 시킴';
   m[5] := '이전의 게임을 재개';
   m[6] := '현재의 게임을 저장';
   m[7] := '게임을 마침';
   k := Select(60,7,7,TRUE,TRUE);
   case k of
      1 : begin
             SetColor(12);
             HPrintXY(275,30,'한번에 출현하는 적들의');
             HPrintXY(287,46,'최대치를 기입하십시오');
             m[0] := '';
             for i:= 1 to 6 do begin
               str(i+2,s); m[i] := s+' 명의 적들';
             end;
             i := Select(90,6,6,FALSE,TRUE)+2;
             if i in [3..8] then maxenemy^ := i;

             m[0] := '일행들의 지금 성격은 어떻습니까 ?';
             m[1] := '일부러 전투를 피하고 싶다';
             m[2] := '너무 잦은 전투는 원하지 않는다';
             m[3] := '마주친 적과는 전투를 하겠다';
             m[4] := '보이는 적들과는 모두 전투하겠다';
             m[5] := '그들은 피에 굶주려 있다';
             i := Select(71,5,5,FALSE,TRUE);
             if i in [1..5] then encounter^ := 6-i;

             m[0] := '의식 불명인 적까지 공격 하겠습니까 ?';
             m[1] := '물론 그렇다';
             m[2] := '그렇지 않다';
             i := Select(90,2,2,FALSE,TRUE);
             if i > 0 then Cruel := (i = 1);
          end;
      2 : begin
             setcolor(12);
             HPrintXY(275,30,'현재의 일원의 전투 순서를 정렬 하십시오.');
             setcolor(11);
             HPrintXY(265,70,'순서를 바꿀 일원');
             m[0] := '';
             for i := 2 to 5 do
                if player[i].name <> '' then m[i-1] := player[i].name
                else m[i-1] := ' 빈자리';
             j := select(105,4,4,FALSE,FALSE) + 1;
             if j = 1 then begin
                clear; exit;
             end;
             setcolor(11);
             HPrintXY(445,70,'순서를 바꿀 일원');
             for i := 2 to 5 do m[i-1] := '                       '+m[i-1];
             k := select(105,4,4,FALSE,FALSE) + 1;
             if k = 1 then begin
                clear; exit;
             end;
             move(player[j],player[7],sizeof(player[7]));
             move(player[k],player[j],sizeof(player[7]));
             move(player[7],player[k],sizeof(player[7]));
             Display_Condition;
             clear;
          end;
      3 : begin
             Clear;
             Print(12,'장비를 제거할 사람을 고르시오.');
             k := ChooseWhom(FALSE);
             if k = 0 then exit;
             Print(12,'제거할 장비를 고르시오.');
             m[0] := '';
             m[1] := ReturnWeapon(player[k].weapon);
             m[2] := ReturnShield(player[k].shield);
             m[3] := ReturnArmor(player[k].armor);
             j := Select(120,3,3,FALSE,TRUE);
             if j = 0 then exit;
             with player[k] do
             case j of
                1 : begin
                       weapon := 0;
                       Print(7,name+'의 무기는 해제 되었습니다.');
                    end;
                2 : begin
                       shield := 0;
                       Print(7,name+'의 방패는 해제 되었습니다.');
                    end;
                3 : begin
                       armor := 0;
                       Print(7,name+'의 갑옷은 해제 되었습니다.');
                    end;
             end;
          end;
      4 : begin
             setcolor(12);
             HPrintXY(275,35,'일행에서 제외 시킬 사람을 고르십시오.');
             m[0] := '';
             for i := 2 to 6 do
                if player[i].name <> '' then m[i-1] := player[i].name
                else m[i-1] := '빈자리';
             k := select(75,5,5,FALSE,TRUE) + 1;
             if k = 1 then begin
                clear; exit;
             end;
             player[k].name := '';
             Display_Condition;
          end;
      5 : Restore_Game;
      6 : begin
             m[0] := '게임의 저장 장소를 선택하십시오.';
             m[1] := '없습니다';
             m[2] := '본 게임 데이타';
             m[3] := '게임 데이타 1 (부)';
             m[4] := '게임 데이타 2 (부)';
             m[5] := '게임 데이타 3 (부)';
             m[6] := '게임 데이타 4 (부)';
             m[7] := '게임 데이타 5 (부)';
             m[8] := '게임 데이타 6 (부)';
             m[9] := '게임 데이타 7 (부)';
             m[10] := '게임 데이타 8 (부)';
             k := select(65,10,10,FALSE,TRUE);
             if k < 2 then exit;
             LoadNo := chr(k+47);
             setcolor(12);
             HPrintXY(312,80,'현재의 게임을 저장합니다');
             Save;
             setcolor(7);
             HPrintXY(360,102,'성공했습니다');
             LoadNo := '1';
             PressAnyKey;
          end;
      7 : GameOver;
   end;
end;

Procedure SelectMode;
begin
   m[0] := '당신의 명령을 고르시오 ===>';
   m[1] := '일행의 상황을 본다       [P]';
   m[2] := '개인의 상황을 본다       [V]';
   m[3] := '일행의 건강 상태를 본다  [Q]';
   m[4] := '마법을 사용한다          [C]';
   m[5] := '초능력을 사용한다        [E]';
   m[6] := '여기서 쉰다              [R]';
   m[7] := '물품을 서로 교환한다';
   m[8] := '물품을 사용한다          [U]';
   m[9] := '게임 선택 상황           [G]';
   k := Select(60,9,9,TRUE,TRUE);
   case k of
      0 : exit;
      1 : ViewParty;
      2 : ViewCharacter;
      3 : QuickView;
      4 : CastSpell;
      5 : Extrasense;
      6 : Rest;
      7 : Exchange;
      8 : begin
             person := ChooseWhom(FALSE);
             if person > 0 then begin
                if exist(person) then Use_Item(10)
                else begin
                   Print(7,' '+player[person].name+ReturnSJosa(player[person].name)+
                           ' 물품을 사용할 수 있는 상태가 아닙니다.');
                end;
             end;
          end;
      9 : GameOption;
   end;
end;

end.