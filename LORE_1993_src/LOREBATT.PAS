Unit LoreBatt;

INTERFACE

Uses
   Crt, Graph, UHanX, LoreSub, Voice, LoreMenu;

 Procedure PlusExperience(person,foe : integer);
 Procedure PlusGold;
 Procedure DisplayEnemies(clean : boolean);
 Function ExistEnemies : boolean;
 Procedure AttackOne;
 Procedure CastOne;
 Procedure CastAll;
 Procedure CastSpecial;
 Procedure BattleESP;
 Function RunAway : boolean;
 Procedure WeaponAttack;
 Procedure castattacksub(magic : string; power,num : integer);
 Procedure castattackone(num : integer);
 Procedure castattackall;
 Procedure enemycure(num, plus : integer);
 Procedure castattack;
 Procedure specialattack;
 Procedure SpecialCastAttack;
 Procedure EnemyAttack;
 Function EndBattle(var exitcode : integer) : boolean;
 Procedure BattleMode(assualt : boolean);
 Procedure randomenemy(var enemynumber: integer);
 Procedure EncounterEnemy;


IMPLEMENTATION

Procedure PlusExperience(person,foe : integer);
var
   i : byte;
   plus : longint;
begin
   plus := enemy[foe].E_number;
   plus := plus * plus * plus div 8;
   if plus = 0 then plus := 1;
   if not enemy[foe].unconscious then begin
      str(plus,s);
      cPrint(14,11,player[person].name+'는 ',s,'만큼 경험치를 얻었다 !');
      with player[person] do experience := experience + plus;
   end
   else begin
      for i := 1 to 6 do if exist(i) then
      player[i].experience := player[i].experience + plus;
   end;
end;

Procedure PlusGold;
var
   long, plus : longint;
begin
   if party.etc[6] = 2 then exit;
   long := 0;
   for i := 1 to enemynumber do begin
      j := enemy[i].E_number;
      k := enemydata[j].ac;
      if k = 0 then k := 1;
      with enemydata[j] do begin
         plus := level;
         plus := plus * level;
         plus := plus * level;
         plus := plus * k;
         long := long + plus;
      end;
   end;
   party.gold := party.gold + long;
   str(long,s);
   message(15,'일행은 '+s+'개의 금을 얻었다.');
end;

Procedure DisplayEnemies(clean : boolean);
begin
   if clean then begin
      SetFillStyle(1,0);
      Bar(20,20,199,199);
      SetFillStyle(1,8);
   end;
   for i:= 1 to enemynumber do
   with enemy[i] do begin
      case hp of
         0 : SetColor(8);
         1..19 : SetColor(12);
         20..49 : SetColor(4);
         50..99 : SetColor(6);
         100..199 : SetColor(14);
         200..299 : SetColor(2)
         else SetColor(10);
      end;
      if unconscious then SetColor(8);
      if dead then SetColor(0);
      OutTextXY(50,20*i+20,name);
   end;
end;

Function ExistEnemies : boolean;
var
   i,j : integer;
begin
   j := 0;
   for i := 1 to enemynumber do
   if not enemy[i].dead then inc(j);
   if j = 0 then ExistEnemies := FALSE else ExistEnemies := TRUE;
end;

Procedure AttackOne;
begin
   returnsexdata;
   k := battle[person,3];
   if enemy[k].dead then begin
      if not ExistEnemies then exit;
      battle[person,3] := battle[person,3] + 1;
      k := k + 1;
      if battle[person,3] <= enemynumber then AttackOne;
      exit;
   end;
   s := ReturnMessage(person,battle[person,1],person,battle[person,3]);
   Print(15,s);
   if enemy[k].unconscious and not enemy[k].dead then begin
      case random(4) of
         0 : Print(12,sexdata+'의 무기가 '+enemy[k].name+'의 심장을 꿰뚫었다');
         1 : Print(12,enemy[k].name+'의 머리는 '+sexdata+'의 공격으로 산산 조각이 났다');
         2 : Print(12,'적의 피가 사방에 뿌려졌다');
         3 : Print(12,'적은 비명과 함께 찢겨 나갔다');
      end;
      if soundon then scream2;
      PlusExperience(person,k);
      enemy[k].hp := 0;
      enemy[k].dead := TRUE;
      exit;
   end;
   if (random(20) > player[person].accuracy[1]) then begin
      Print(7,sexdata+'의 공격은 빗나갔다 ....');
      exit;
   end;
   with player[person] do i := round(strength * wea_power * level[1] div 20);
   i := i - i * random(50) div 100;
   if random(100) < enemy[k].resistance then begin
      Print(7,'적은 '+sexdata+'의 공격을 저지했다');
      exit;
   end;
   with enemy[k] do j := round(ac * level * (random(10)+1) / 10);
   i := i - j;
   if i <= 0 then begin
      Print(7,'그러나, 적은 '+sexdata+'의 공격을 막았다');
      exit;
   end;
   with enemy[k] do begin
      hp := hp - i;
      str(i,s);
      if hp <= 0 then begin
         hp := 0;
         unconscious := FALSE; dead := FALSE;
         Print(12,'적은 '+sexdata+'의 공격으로 의식불명이 되었다');
         if soundon then hit;
         PlusExperience(person,k);
         unconscious := TRUE;
      end
      else begin
         cPrint(7,15,'적은 ',s,'만큼의 피해를 입었다');
         if soundon then hit;
      end;
      DisplayEnemies(FALSE);
   end;
end;

Procedure CastOne;
begin
   returnsexdata;
   j := battle[person,2];
   k := battle[person,3];
   if enemy[k].dead then begin
      if not ExistEnemies then exit;
      battle[person,3] := battle[person,3] + 1;
      k := k + 1;
      if battle[person,3] <= enemynumber then castone;
      exit;
   end;
   s := ReturnMessage(person,battle[person,1],battle[person,2],battle[person,3]);
   Print(15,s);
   if enemy[k].unconscious then begin
      Print(12,sexdata+'의 마법은 적의 시체 위에서 작열했다');
      if soundon then scream1;
      PlusExperience(person,k);
      enemy[k].hp := 0;
      enemy[k].dead := TRUE;
      DisplayEnemies(FALSE);
      exit;
   end;
   with player[person] do begin
      i := round(level[2]*j*j/2);
      if sp < i then begin
         Print(7,'마법 지수가 부족했다');
         exit;
      end;
      sp := sp - i;
      if random(20) >= accuracy[2] then begin
         Print(7,'그러나, '+enemy[k].name+'를 빗나갔다');
         exit;
      end;
      i := round(j * j * level[2] * 2);
   end;
   if random(100) < enemy[k].resistance then begin
      Print(7,enemy[k].name+'는 '+sexdata+'의 마법을 저지했다');
      exit;
   end;
   with enemy[k] do j := round(ac * level * (random(10)+1) / 10);
   i := i - j;
   if i <= 0 then begin
      Print(7,'그러나, '+enemy[k].name+'는 '+sexdata+'의 마법 공격을 막았다');
      exit;
   end;
   with enemy[k] do begin
      hp := hp - i;
      str(i,s);
      if hp <= 0 then begin
         Print(12,name+'는 '+sexdata+'의 마법에 의해 의식불능이 되었다');
         if soundon then hit;
         PlusExperience(person,k);
         hp := 0;
         unconscious := TRUE;
      end
      else begin
         cPrint(7,15,name+'는 ',s,'만큼의 피해를 입었다');
         if soundon then hit;
      end;
      DisplayEnemies(FALSE);
   end;
end;

Procedure CastAll;
begin
   battle[person,3] := 1;
   while battle[person,3] <= enemynumber do begin
      CastOne;
      inc(battle[person,3]);
   end;
end;

Procedure CastSpecial;
begin
   if party.etc[38] and bit1 = 0 then begin
      Print(7,'당신에게는 아직 능력이 없다.');
      exit;
   end;
   case battle[person,2] of
      1 : with enemy[battle[person,3]] do begin
             if player[person].sp < 10 then begin
                Print(7,'마법 지수가 부족했다');
                exit;
             end;
             player[person].sp := player[person].sp - 10;
             if random(100) < resistance then begin
                Print(7,'적은 독 공격을 저지 했다');
                exit;
             end;
             if random(40) > player[person].accuracy[2] then begin
                Print(7,'독 공격은 빗나갔다');
                exit;
             end;
             Print(4,name+'는 중독 되었다');
             poison := TRUE;
          end;
      2 : with enemy[battle[person,3]] do begin
             if player[person].sp < 30 then begin
                Print(7,'마법 지수가 부족했다');
                exit;
             end;
             player[person].sp := player[person].sp - 30;
             if random(100) < resistance then begin
                Print(7,'기술 무력화 공격은 저지 당했다');
                exit;
             end;
             if random(60) > player[person].accuracy[2] then begin
                Print(7,'기술 무력화 공격은 빗나갔다');
                exit;
             end;
             Print(4,name+'의 특수 공격 능력이 제거되었다');
             special := 0;
          end;
      3 : with enemy[battle[person,3]] do begin
             if player[person].sp < 15 then begin
                Print(7,'마법 지수가 부족했다');
                exit;
             end;
             player[person].sp := player[person].sp - 15;
             if random(100) < resistance then begin
                Print(7,'방어 무력화 공격은 저지 당했다');
                exit;
             end;
             if ac < 5 then j := 40 else j := 25;
             if random(j) > player[person].accuracy[2] then begin
                Print(7,'방어 무력화 공격은 빗나갔다');
                exit;
             end;
             Print(4,name+'의 방어 능력이 저하되었다');
             if (resistance < 31) or (random(2) = 0) then dec(ac)
             else resistance := resistance - 10;
          end;
      4 : with enemy[battle[person,3]] do begin
             if player[person].sp < 20 then begin
                Print(7,'마법 지수가 부족했다');
                exit;
             end;
             player[person].sp := player[person].sp - 20;
             if random(200) < resistance then begin
                Print(7,'능력 저하 공격은 저지 당했다');
                exit;
             end;
             if random(30) > player[person].accuracy[2] then begin
                Print(7,'능력 저하 공격은 빗나갔다');
                exit;
             end;
             Print(4,name+'의 전체적인 능력이 저하되었다');
             if level > 1 then dec(level);
             if resistance > 0 then resistance := resistance - 10
             else resistance := 0;
          end;
      5 : with enemy[battle[person,3]] do begin
             if player[person].sp < 15 then begin
                Print(7,'마법 지수가 부족했다');
                exit;
             end;
             player[person].sp := player[person].sp - 15;
             if random(100) < resistance then begin
                Print(7,'마법 불능 공격은 저지 당했다');
                exit;
             end;
             if random(100) > player[person].accuracy[2] then begin
                Print(7,'마법 불능 공격은 빗나갔다');
                exit;
             end;
             if castlevel > 1 then Print(4,name+'의 마법 능력이 저하되었다')
             else Print(4,name+'의 마법 능력은 사라졌다');
             if castlevel > 0 then dec(castlevel);
          end;
      6 : with enemy[battle[person,3]] do begin
             if player[person].sp < 20 then begin
                Print(7,'마법 지수가 부족했다');
                exit;
             end;
             player[person].sp := player[person].sp - 20;
             if random(100) < resistance then begin
                Print(7,'탈 초인화 공격은 저지 당했다');
                exit;
             end;
             if random(100) > player[person].accuracy[2] then begin
                Print(7,'탈 초인화 공격은 빗나갔다');
                exit;
             end;
             if specialcastlevel > 1 then
                Print(4,name+'의 초자연적 능력이 저하되었다')
             else Print(4,name+'의 초자연적 능력은 사라졌다');
             if specialcastlevel > 0 then dec(specialcastlevel);
          end;
   end;
end;

Procedure BattleESP;
begin
   if not ((player[person].class in [2,3,6]) or (party.etc[39] and bit1 > 0)) then begin
      Print(7,'당신에게는 아직 능력이 없다.');
      exit;
   end;
   if battle[person,2] in [1,2,4] then begin
      Print(7,ReturnMagic(battle[person,2]+40)+'는 전투모드에서는 사용할 수가 없습니다.');
      exit;
   end;
   if battle[person,2] = 3 then
   with enemy[battle[person,3]] do begin
      if player[person].esp < 15 then begin
         Print(7,'초감각 지수가 부족했다');
         exit;
      end;
      player[person].esp := player[person].esp - 15;
      if not (E_number in [6,10,20,24,27,29,33,35,40,47,53,62]) then begin
         Print(7,'독심술은 전혀 통하지 않았다');
         exit;
      end;
      j := level;
      if E_number = 62 then j := 17;
      if (j > player[person].level[3]) and (random(2) = 0) then begin
         Print(7,'적의 마음을 끌어들이기에는 아직 능력이 부족했다');
         exit;
      end;
      if random(60) > (player[person].level[3]-j)*2 + player[person].accuracy[3] then begin
         Print(7,'적의 마음은 흔들리지 않았다');
         exit;
      end;
      Print(11,'적은 우리의 편이 되었다');
      join(E_number,6);
      dead := TRUE; unconscious := TRUE; hp := 0; level := 0;
      Display_Condition;
   end
   else begin
      if player[person].esp < 20 then begin
         Print(7,'초감각 지수가 부족했다');
         exit;
      end;
      player[person].esp := player[person].esp - 20;
      k := random(player[person].level[3]) + 1;
      ReturnSexData;
      case k of
         1..6 : begin
                   case k of
                      1,2 : Print(7,'주위의 돌들이 떠올라 '+
                            enemy[battle[person,3]].name + '를 공격하기 시작한다');
                      3,4 : Print(7,enemy[battle[person,3]].name +
                            ' 주위의 세균이 그에게 침투하여 해를 입히기 시작한다');
                      5,6 : Print(7,sexdata + '의 무기가 갑자기 '+
                            enemy[battle[person,3]].name + '에게 달려들기 시작한다');
                   end;
                   j := enemy[battle[person,3]].hp;
                   if j < k * 10 then j := 0 else j := j - k * 10;
                   enemy[battle[person,3]].hp := j;
                   if enemy[battle[person,3]].unconscious
                   and not enemy[battle[person,3]].dead then begin
                      enemy[battle[person,3]].dead := TRUE;
                      plusexperience(person,battle[person,3]);
                   end;
                   if (j=0) and not enemy[battle[person,3]].unconscious then begin
                      enemy[battle[person,3]].unconscious := TRUE;
                      plusexperience(person,battle[person,3]);
                   end;
                end;
         7..10 : begin
                    case k of
                       7,8 : begin
                                Print(7,'갑자기 땅속의 우라늄이 핵분열을 일으켜 고온');
                                Print(7,'의 열기가 적의 주위를 감싸기 시작한다');
                             end;
                       9,10 : begin
                                 Print(7,'공기중의 수소가 돌연히 핵융합을 일으켜 질량');
                                 Print(7,'결손의 에너지를 적들에게 방출하기 시작한다');
                              end;
                    end;
                    for i := 1 to enemynumber do begin
                       j := enemy[i].hp;
                       if j < k * 5 then j := 0 else j := j - k * 5;
                       enemy[i].hp := j;
                       if enemy[i].unconscious and not enemy[i].dead then begin
                          enemy[i].dead := TRUE;
                          plusexperience(person,battle[person,3]);
                       end;
                       if (j=0) and not enemy[i].unconscious then begin
                          enemy[i].unconscious := TRUE;
                          plusexperience(person,i);
                       end;
                    end;
                 end;
         11..12 : begin
                     Print(7,sexdata + '는 적에게 공포심을 불어 넣었다');
                     j := battle[person,3];
                     if random(40) < enemy[j].resistance then begin
                        if enemy[j].resistance < 5 then enemy[j].resistance := 0
                        else enemy[j].resistance := enemy[j].resistance - 5;
                        exit;
                     end;
                     if random(60) > player[person].accuracy[3] then begin
                        if enemy[j].endurance < 5 then enemy[j].endurance := 0
                        else enemy[j].endurance := enemy[j].endurance - 5;
                        exit;
                     end;
                     enemy[j].dead := TRUE;
                     Print(10,enemy[j].name + '는 겁을 먹고는 도망 가버렸다');
                  end;
         13..14 : begin
                     auxPrint(7,sexdata + '는 적의 신진 대사를 조절하여 적의 ',TRUE);
                     auxPrint(7,'체력을 점차 약화 시키려 한다',FALSE);
                     if random(100) < enemy[battle[person,3]].resistance then exit;
                     if random(40) > player[person].accuracy[3] then exit;
                     enemy[battle[person,3]].poison := TRUE;
                  end;
         15..17 : begin
                     Print(7,sexdata + '는 염력으로 적의 심장을 멈추려 한다');
                     j := battle[person,3];
                     if random(40) < enemy[j].resistance then begin
                        if enemy[j].resistance < 5 then enemy[j].resistance := 0
                        else enemy[j].resistance := enemy[j].resistance - 5;
                        exit;
                     end;
                     if random(80) > player[person].accuracy[3] then begin
                        if enemy[j].hp < 10 then begin
                           enemy[j].hp := 0;
                           enemy[j].unconscious := TRUE;
                        end
                        else enemy[j].hp := enemy[j].hp - 5;
                        exit;
                     end;
                     enemy[j].unconscious := TRUE;
                  end
         else begin
                 Print(7,sexdata + '는 적을 환상속에 빠지게 하려한다');
                 j := battle[person,3];
                 if random(40) < enemy[j].resistance then begin
                    if enemy[j].agility < 5 then enemy[j].agility := 0
                    else enemy[j].agility := enemy[j].agility - 5;
                    exit;
                 end;
                 if random(30) > player[person].accuracy[3] then exit;
                 for i := 1 to 2 do
                 if enemy[j].accuracy[i] > 0 then
                    dec(enemy[j].accuracy[i]);
              end;
      end;
      DisplayEnemies(FALSE);
   end;
end;

Function RunAway : boolean;
begin
   if Random(50) > player[person].agility then begin
      RunAway := FALSE;
      Print(7,'그러나, 일행은 성공하지 못했다');
   end
   else begin
           RunAway := TRUE;
           Print(11,'성공적으로 도망을 갔다');
   end;
end;

Procedure WeaponAttack;
var
   i,j,k,h : integer;
begin
   with enemy[person] do begin;
      if random(20) >= accuracy[1] then begin
         Print(7,name+'는 빗맞추었다');
         exit;
      end;
      k := 0;
      for i := 1 to 6 do if exist(i) then inc(k);
      h := random(k)+1;
      k := 0; j := 0;
      for i := 1 to 6 do if exist(i) then begin
         inc(k);
         if k = h then j := i;
      end;
      if j = 0 then j := random(6) + 1;
      if player[j].name = '' then j := random(5) + 1;
      i := strength * level * (random(10)+1) div 10;
      if exist(j) then
      if random(50) < player[j].resistance then begin
         Print(13,name+'는 '+player[j].name+'를 공격했다');
         Print(7,'그러나, '+player[j].name+'는 적의 공격을 저지했다');
         exit;
      end;
      if exist(j) then
         i := i - (player[j].ac * player[j].level[1] * (random(10)+1) div 10);
      if i <= 0 then begin
         Print(13,name+'는 '+player[j].name+'를 공격했다');
         Print(7,'그러나, '+player[j].name+'는 적의 공격을 방어했다');
         exit;
      end;
      if player[j].dead > 0 then player[j].dead := player[j].dead + i;
      if (player[j].unconscious > 0) and (player[j].dead = 0) then
         player[j].unconscious := player[j].unconscious + i;
      if player[j].hp > 0 then player[j].hp := player[j].hp - i;
      Print(13,player[j].name+'는 '+name+'에게 공격 받았다');
      str(i,s);
      cPrint(5,13,player[j].name+'는 ',s,'만큼의 피해를 입었다');
   end;
end;

Procedure castattacksub(magic : string; power,num : integer);
begin
   with enemy[person] do begin
      if random(20) >= accuracy[2] then begin
         Print(7,name+'의 마법공격은 빗나갔다');
         exit;
      end;
      if exist(num) then
      if random(50) < player[num].resistance then begin
         Print(7,'그러나, '+player[num].name+'는 적의 마법을 저지했다');
         exit;
      end;
      power := power - random(power div 2);
      if exist(num) then
         power := power -
         (player[num].ac * player[num].level[1] * (random(10)+1) div 10);
      if power <= 0 then begin
         Print(7,'그러나, '+player[num].name+'는 적의 마법을 막아냈다');
         exit;
      end;
      if player[num].dead > 0 then player[num].dead := player[num].dead + power;
      if (player[num].unconscious > 0) and (player[num].dead = 0) then
         player[num].unconscious := player[num].unconscious + power;
      if player[num].hp > 0 then player[num].hp := player[num].hp - power;
      str(power,s);
      cPrint(5,13,player[num].name+'는 ',s,'만큼의 피해를 입었다');
   end;
end;

Procedure castattackone(num : integer);
begin
   with enemy[person] do begin
      case mentality of
         1..3 : begin
                   s := '충격';
                   k := 1;
                end;
         4..8 : begin
                   s := '냉기';
                   k := 2;
                end;
         9..10 : begin
                    s := '고통';
                    k := 4;
                 end;
         11..14 : begin
                     s := '혹한';
                     k := 6;
                  end;
         15..18 : begin
                     s := '화염';
                     k := 7;
                  end
         else begin
            s := '번개';
            k := 10;
         end;
      end;
      i := k * level;
      Print(13,enemy[person].name+'는 '
         +player[num].name+'에게 '''+s+'''마법을 사용했다');
      castattacksub(s,i,num);
   end;
end;

Procedure castattackall;
var
   method : string;
begin
   case enemy[person].mentality of
      1..6 : begin
                method := '열파';
                k := 1;
             end;
      7..12 : begin
                 method := '에너지';
                 k := 2;
              end;
      13..16 : begin
                  method := '초음파';
                  k := 3;
               end;
      17..20 : begin
                  method := '혹한기';
                  k := 5;
               end
      else begin
         method := '화염폭풍';
         k := 8;
      end;
   end;
   i := k * enemy[person].level;
   Print(13,enemy[person].name+'는 일행 모두에게 '''+method+'''마법을 사용했다');
   for j := 1 to 6 do castattacksub(method,i,j);
end;

Procedure enemycure(num, plus : integer);
begin
   if person = num then Print(13,enemy[person].name+'는 자신을 치료했다')
   else Print(13,enemy[person].name+'는 '+enemy[num].name+'를 치료했다');
   if enemy[num].dead then enemy[num].dead := FALSE
   else if enemy[num].unconscious then begin
      enemy[num].unconscious := FALSE;
      if enemy[num].hp <= 0 then enemy[num].hp := 1;
   end
   else begin
      enemy[num].hp := enemy[num].hp + plus;
      if enemy[num].hp > enemy[num].endurance * enemy[num].level then
      enemy[num].hp := enemy[num].endurance * enemy[num].level;
   end;
end;

Procedure castattack;
var
   i,j,k : integer;
begin
   case enemy[person].castlevel of
      1 : begin
             if player[6].name = '' then k := 5 else k := 6;
             j := random(k) + 1;
             if not exist(j) then j := random(k) + 1;
             castattackone(j);
          end;
      2 : begin
             k := 0;
             for i := 1 to 6 do if exist(i) then inc(k);
             h := random(k)+1;
             k := 0; j := 0;
             for i := 1 to 6 do if exist(i) then begin
                inc(k);
                if k = h then j := i;
             end;
             if j = 0 then j := random(6) + 1;
             if player[j].name = '' then j := random(5) + 1;
             castattackone(j);
          end;
      3 : begin
             k := 0;
             for i := 1 to 6 do if exist(i) then inc(k);
             if random(k) < 2 then begin
                k := 0;
                for i := 1 to 6 do if exist(i) then inc(k);
                h := random(k)+1;
                k := 0; j := 0;
                for i := 1 to 6 do if exist(i) then begin
                   inc(k);
                   if k = h then j := i;
                end;
                if j = 0 then j := random(6) + 1;
                if player[j].name = '' then j := random(5) + 1;
                castattackone(j);
             end
             else castattackall;
          end;
      4 : with enemy[person] do begin
             if (hp < endurance * level div 3) and (random(2) = 0) then
                enemycure(person,level * mentality div 4)
             else begin
                k := 0;
                for i := 1 to 6 do if exist(i) then inc(k);
                if random(k) < 2 then begin
                   k := 0;
                   for i := 1 to 6 do if exist(i) then inc(k);
                   h := random(k)+1;
                   k := 0; j := 0;
                   for i := 1 to 6 do if exist(i) then begin
                      inc(k);
                      if k = h then j := i;
                   end;
                   if j = 0 then j := random(6) + 1;
                   if player[j].name = '' then j := random(5) + 1;
                   castattackone(j);
                end
                else castattackall;
             end;
          end;
      5 : with enemy[person] do begin
             if (hp < endurance * level div 3) and (random(3)=0) then
                enemycure(person,level * mentality div 4)
             else begin
                k := 0;
                for i := 1 to 6 do if exist(i) then inc(k);
                if random(k) < 2 then begin
                   j := 0; k := 0;
                   for i := 1 to enemynumber do j := j + enemy[i].hp;
                   for i := 1 to enemynumber do k := k + enemy[i].endurance * enemy[i].level;
                   k := k div 3;
                   if (enemynumber>2) and (j<k) and (random(2)=0) then
                   for i := 1 to enemynumber do enemycure(i,level * mentality div 6)
                   else begin
                      j := 1;
                      for i := 6 downto 1 do if exist(i) then j := i;
                      for i := 2 to 6 do if exist(i) and (player[i].hp<player[j].hp) then j := i;
                      castattackone(j);
                   end;
                end
                else castattackall;
             end;
          end;
      6 : with enemy[person] do begin
             if (hp < endurance * level div 3) and (random(3)=0) then begin
                enemycure(person,level * mentality div 4);
                exit;
             end;
             j := 0; k := 0;
             for i := 1 to 6 do if player[i].name <> '' then begin
                inc(j);
                k := k + player[i].ac;
             end;
             k := k div j;
             if (k>4) and (random(5)=0) then begin
                for i := 1 to 6 do if player[i].name <> '' then begin
                   Print(13,name+'는 '+player[i].name+'의 갑옷파괴를 시도했다');
                   if player[i].luck > random(21) then Print(7,'그러나, '+name+'는 성공하지 못했다')
                   else begin
                      Print(5,player[i].name+'의 갑옷은 파괴되었다');
                      if player[i].ac > 0 then dec(player[i].ac);
                   end;
                end;
                display_condition;
             end
             else begin
                j := 0; k := 0;
                for i := 1 to enemynumber do j := j + enemy[i].hp;
                for i := 1 to enemynumber do k := k + enemy[i].endurance * enemy[i].level;
                k := k div 3;
                if (enemynumber>2) and (j<k) and (random(3)<>0) then
                for i := 1 to enemynumber do enemycure(i,level * mentality div 6)
                else begin
                   k := 0;
                   for i := 1 to 6 do if exist(i) then inc(k);
                   if random(k) < 2 then begin
                      j := 1;
                      for i := 6 downto 1 do if exist(i) then j := i;
                      for i := 2 to 6 do if exist(i) and (player[i].hp<player[j].hp) then
                         j := i;
                      castattackone(j);
                   end else castattackall;
                end;
             end;
          end;
   end;
end;

Procedure specialattack;
begin
   with enemy[person] do
   case special of
      1 : begin
             k := 0;
             for i := 1 to 6 do if player[i].poison = 0 then inc(k);
             h := random(k)+1;
             k := 0; j := 0;
             for i := 1 to 6 do if player[i].poison = 0 then begin
                inc(k);
                if k = h then j := i;
             end;
             if j = 0 then j := random(6) + 1;
             if player[j].name = '' then j := random(5) + 1;
             Print(13,name+'는 '+player[j].name+'에게 독 공격을 시도했다');
             if random(40) > agility then begin
                Print(7,'독 공격은 실패했다');
                exit;
             end;
             if random(20) < player[j].luck then begin
                Print(7,'그러나, '+player[j].name+'는 독 공격을 피했다');
                exit;
             end;
             Print(4,player[j].name+'는 중독 되었다 !!');
             if player[j].poison = 0 then player[j].poison := 1;
          end;
      2 : begin
             k := 0;
             for i := 1 to 6 do if player[i].unconscious = 0 then inc(k);
             h := random(k)+1;
             k := 0; j := 0;
             for i := 1 to 6 do if player[i].unconscious = 0 then begin
                inc(k);
                if k = h then j := i;
             end;
             if j = 0 then j := random(6) + 1;
             if player[j].name = '' then j := random(5) + 1;
             Print(13,name+'는 '+player[j].name+'에게 치명적 공격을 시도했다');
             if random(50) > agility then begin
                Print(7,'치명적 공격은 실패했다');
                exit;
             end;
             if random(20) < player[j].luck then begin
                Print(7,'그러나, '+player[j].name+'는 치명적 공격을 피했다');
                exit;
             end;
             Print(4,player[j].name+'는 의식불명이 되었다 !!');
             if player[j].unconscious = 0 then begin
                player[j].unconscious := 1;
                if player[j].hp > 0 then player[j].hp := 0;
             end;
          end;
      3 : begin
             k := 0;
             for i := 1 to 6 do if player[i].dead = 0 then inc(k);
             h := random(k)+1;
             k := 0; j := 0;
             for i := 1 to 6 do if player[i].dead = 0 then begin
                inc(k);
                if k = h then j := i;
             end;
             if j = 0 then j := random(6) + 1;
             if player[j].name = '' then j := random(5) + 1;
             Print(13,name+'는 '+player[j].name+'에게 죽음의 공격을 시도했다');
             if random(60) > agility then begin
                Print(7,'죽음의 공격은 실패했다');
                exit;
             end;
             if random(20) < player[j].luck then begin
                Print(7,'그러나, '+player[j].name+'는 죽음의 공격을 피했다');
                exit;
             end;
             Print(4,player[j].name+'는 죽었다 !!');
             if player[j].dead = 0 then begin
                player[j].dead := 1;
                if player[j].hp > 0 then player[j].hp := 0;
             end;
          end;
   end;
end;

Procedure SpecialCastAttack;
begin
   with enemy[person] do begin
      if E_Number = 1 then exit;
      j := 0; k := enemynumber;
      for i := enemynumber downto 1 do
      if not enemy[i].dead then inc(j)
      else k := i;
      if (j < random(3)+2) and (random(3) = 0) then begin
         if enemynumber < 7 then begin
            inc(enemynumber);
            k := enemynumber;
         end;
         joinenemy(k,E_number + random(4) - 20);
         displayenemies(TRUE);
         Print(13,name+'는 '+enemy[k].name+'를 생성시켰다');
      end;
      if specialcastlevel > 1 then begin
         j := 0; k := enemynumber;
         for i := enemynumber downto 1 do
         if not enemy[i].dead then inc(j)
         else k := i;
         if (player[6].name <> '') and (j < 7) and (random(5) = 0) then begin
            if enemynumber < 7 then begin
               inc(enemynumber);
               k := enemynumber;
            end;
            turn_mind(k,6);
            player[6].name := '';
            Display_Condition;
            displayenemies(TRUE);
            Print(13,name+'가 독심술을 사용하여 '+enemy[k].name+
                     '을 자기편으로 끌어들였다');
         end;
      end;
      if specialcastlevel > 2 then begin
         if special = 0 then exit;
         if random(5) = 0 then
         for k := 1 to 6 do
         if (player[k].dead = 0) and (player[k].name <> '') then begin
             Print(13,name+'는 '+player[k].name+'에게 죽음의 공격을 시도했다');
             if random(60) > agility then Print(7,'죽음의 공격은 실패했다')
             else if random(20) < player[k].luck then
             Print(7,'그러나, '+player[k].name+'는 죽음의 공격을 피했다')
             else begin
                Print(4,player[k].name+'는 죽었다 !!');
                if player[k].dead = 0 then begin
                   player[k].dead := 1;
                   if player[k].hp > 0 then player[k].hp := 0;
                end;
             end;
         end;
      end;
   end;
end;

Procedure EnemyAttack;
var
   i,j : integer;
begin
   if enemy[person].specialcastlevel > 0 then specialcastattack;
   i := enemy[person].agility;
   if i > 20 then i := 20;
   if (enemy[person].special>0) and (random(50)<i) then begin
      j := 0;
      for i := 1 to enemynumber do
      if not (enemy[i].unconscious or enemy[i].dead) then inc(j);
      if j > 3 then begin
         specialattack;
         exit;
      end;
   end;
   if (random(enemy[person].accuracy[1]*1000) > random(enemy[person].accuracy[2]*1000))
   and (enemy[person].strength > 0) then weaponattack else castattack;
end;

Function EndBattle(var exitcode : integer) : boolean;
var
   i,j : integer;
begin
   i := 0; j := 0;
   for person := 1 to 6 do
   with player[person] do
   if name <> '' then begin
      i := i + 1;
      if not exist(person) then j := j + 1;
   end;
   if i = j then begin
      exitcode := 1; { Lost in Battle }
      EndBattle := TRUE;
      exit;
   end;
   i := 0; j := 0;
   for person := 1 to enemynumber do
   with enemy[person] do begin
      i := i + 1;
      if dead or unconscious then j := j + 1;
   end;
   if i = j then begin
      exitcode := 0; { Win in Battle }
      EndBattle := TRUE;
      exit;
   end;
   EndBattle := FALSE;
end;

Procedure BattleMode(assualt : boolean);
label loop;
begin
   party.etc[6] := 1;
   repeat begin
      if not assualt then begin
         assualt := TRUE;
         goto loop;
      end;
      for person := 1 to 6 do battle[person,1] := 0;
      DisplayEnemies(FALSE);
      autobattle := FALSE;
      for person := 1 to 6 do
      if exist(person) then begin
         if not autobattle then begin
            m[0] := player[person].name + '의 전투 모드 ===>';
            m[1] := '한 명의 적을 '+ReturnWeapon(player[person].weapon)+Josa+'로 공격';
            m[2] := '한 명의 적에게 마법 공격';
            m[3] := '모든 적에게 마법 공격';
            m[4] := '적에게 특수 마법 공격';
            m[5] := '일행을 치료';
            m[6] := '적에게 초능력 사용';
            m[7] := '도망을 시도함';
            if person = 1 then m[7] := '일행에게 무조건 공격 할 것을 지시';
            k := Select(60,7,7,TRUE,FALSE);
            if k<>1 then Clear;
            m[1] := '없음';
            if (k = 7) and (person = 1) then begin
               k := 8;
               autobattle := TRUE;
            end;
         end
         else k := 8;
         battle[person,1] := k;
         case k of
            8 : case player[person].class of
                   0,1,4..8,10 : begin
                                    battle[person,1] := 1;
                                    battle[person,2] := player[person].weapon;
                                    battle[person,3] := 1;
                                 end;
                   2,9 : begin
                            battle[person,1] := 2;
                            case player[person].level[2] of
                               0..1 : i := 1;
                               2..3 : i := 2;
                               4..7 : i := 3;
                               8..11 : i := 4;
                               12..15 : i := 5
                               else i := 6;
                            end;
                            i := round(i/2);
                            if i = 0 then i := 1;
                            battle[person,2] := i;
                            battle[person,3] := 1;
                         end;
                   3 : begin
                          battle[person,1] := 6;
                          battle[person,2] := 5;
                          j := 1;
                          for i := 1 to enemynumber do
                          if not (enemy[i].unconscious or enemy[i].dead) then j := i;
                          battle[person,3] := j;
                       end;
                end;
            1 : begin
                   j := SelectEnemy;
                   Clear;
                   if j = 0 then battle[person,1] := 0;
                   battle[person,2] := player[person].weapon;
                   battle[person,3] := j;
                end;
            2 : begin
                   for j := 1 to 6 do m[j+1] := ReturnMagic(j);
                   case player[person].level[2] of
                      0..1 : j := 2;
                      2..3 : j := 3;
                      4..7 : j := 4;
                      8..11 : j := 5;
                      12..15 : j := 6
                      else j := 7;
                   end;
                   i := Select(60,j,7,TRUE,FALSE);
                   if (i=0) or (i=1) then battle[person,1] := 0 else j := SelectEnemy;
                   Clear;
                   battle[person,2] := i-1;
                   battle[person,3] := j;
                end;
            3 : begin
                   for j := 1 to 6 do m[j+1] := ReturnMagic(j+6);
                   case player[person].level[2] of
                      0..1 : j := 1;
                      2 : j := 2;
                      3..5 : j := 3;
                      6..9 : j := 4;
                      10..13 : j := 5;
                      14..17 : j := 6
                      else j := 7;
                   end;
                   i := Select(60,j,7,TRUE,TRUE);
                   if (i=0) or (i=1) then battle[person,1] := 0;
                   battle[person,2] := i-1;
                   battle[person,3] := 0;
                end;
            4 : begin
                   for j := 1 to 6 do m[j+1] := ReturnMagic(j+12);
                   case player[person].level[2] of
                      0..4 : j := 1;
                      5..9 : j := 2;
                      10..11 : j := 3;
                      12..13 : j := 4;
                      14..15 : j := 5;
                      16..17 : j := 6
                      else j:= 7;
                   end;
                   i := Select(60,j,7,TRUE,FALSE);
                   if (i=0) or (i=1) then battle[person,1] := 0 else j := SelectEnemy;
                   Clear;
                   battle[person,2] := i-1;
                   battle[person,3] := j;
                end;
            5 : CureSpell;
            6 : begin
                   for j := 1 to 5 do m[j] := ReturnMagic(j+40);
                   i := Select(74,5,5,TRUE,FALSE);
                   if i = 0 then battle[person,1] := 0 else j := SelectEnemy;
                   Clear;
                   battle[person,2] := i;
                   battle[person,3] := j;
                   if enemy[j].unconscious or enemy[j].dead then battle[person,1] := 0;
                end;
         end;
      end;
      for person := 1 to 6 do
      if exist(person) then begin
         s := ReturnMessage(person,battle[person,1],battle[person,2],battle[person,3]);
         if battle[person,1] in [0,4,6..8] then Print(15,s);
         case battle[person,1] of
            1 : AttackOne;
            2 : CastOne;
            3 : CastAll;
            4 : CastSpecial;
            6 : BattleESP;
            7 : begin
                   ok := RunAway;
                   if ok then begin
                      party.etc[6] := 2;
                      c := ReadKey; Clear; Scroll(TRUE);
                      exit;
                   end;
                end;
         end;
         Print(7,'');
      end;
      DisplayEnemies(FALSE);
      print(7,'');
      PressAnyKey;
loop:
      for person := 1 to enemynumber do
      with enemy[person] do begin
         if poison then begin
            if unconscious then dead := TRUE
            else begin
               dec(hp);
               if hp <= 0 then unconscious := TRUE;
            end;
         end;
         if not (dead or unconscious) then EnemyAttack;
      end;
      SimpleDisCond;
      ok := EndBattle(i);
      c := ReadKey;
   end;
   until ok;
   case i of
      0 : begin
             Clear;
             PlusGold;
          end;
      1 : begin
             GameOver;
             exit;
          end;
   end;
   party.etc[6] := 0;
   Scroll(TRUE);
end;

Procedure randomenemy(var enemynumber: integer);
var
   range,plus : byte;
begin
   case party.map of
      1 : begin range := 10; plus := 1; end;
      2 : begin range := 13; plus := 8; end;
      3 : begin range := 15; plus := 16; end;
      4 : begin range := 17; plus := 24; end;
      5 : begin range := 17; plus := 33; end;
      11 : begin range := 10; plus := 6; end;
      12 : begin range := 5; plus := 17; end;
      14 : begin range := 8; plus := 5; end;
      15 : begin range := 8; plus := 18; end;
      16 : begin range := 5; plus := 28; end;
      17 : begin range := 6; plus := 23; end;
      18 : begin range := 3; plus := 30; end;
      19 : begin range := 4; plus := 38; end;
      20 : begin range := 5; plus := 41; end;
      else begin range := 0; plus := 0; end;
   end;
   enemynumber := random(range) + plus;
end;

Procedure EncounterEnemy;
var
   assualt : boolean;
   plus : longint;
begin
   if (position=town) or (party.map>20) then exit;
   enemynumber := random(maxenemy^)+1;
   if enemynumber > maxenemy^ then enemynumber := maxenemy^;
   for i:= 1 to enemynumber do begin
      randomenemy(j);
      if j = 0 then exit;
      joinenemy(i,j);
   end;
   Clear;
   SetColor(13); HPrintXY(250,50,'적이 출현했다 !!!');
   DisplayEnemies(TRUE);
   j := 0; h := 0;
   for i := 1 to enemynumber do
   with enemy[i] do begin
      j := j + 1; h := h + agility;
   end;
   i := h div j;
   SetColor(11); HPrintXY(265,80,'적의 평균 민첩성');
   str(i,s); HPrintXY(281,96,': '+s);
   m[0] := '';
   m[1] := '적과 교전한다';
   m[2] := '도망간다';
   k := Select(130,2,2,FALSE,TRUE);
   Clear;
   if k <> 1 then begin
      j := 0; h := 0;
      for i := 1 to 6 do
      with player[i] do
      if name <> '' then begin
         j := j + 1; h := h + luck;
      end;
      k := h div j;
      j := 0; h := 0;
      for i := 1 to enemynumber do
      with enemy[i] do begin
         j := j + 1; h := h + agility;
      end;
      i := h div j;
      if k > i then begin
         Scroll(TRUE);
         exit;
      end;
      assualt := FALSE;
   end
   else begin
      j := 0; h := 0;
      for i := 1 to 6 do
      with player[i] do
      if name <> '' then begin
         j := j + 1; h := h + agility;
      end;
      k := h div j;
      j := 0; h := 0;
      for i := 1 to enemynumber do
      with enemy[i] do begin
         j := j + 1; h := h + agility;
      end;
      i := h div j;
      if k > i then assualt := TRUE else assualt := FALSE;
   end;
   BattleMode(assualt);
end;

begin
end.