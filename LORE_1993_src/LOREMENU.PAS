Unit LoreMenu;

INTERFACE

Uses
   Crt, Dos, Graph, UHanX, LoreSub;

 Procedure AttackSpell;
 Procedure SPnotEnough;
 Procedure HealOne(whom : byte);
 Procedure CureOne(whom : byte);
 Procedure ConsciousOne(whom : byte);
 Procedure RevitalizeOne(whom : byte);
 Procedure HealAll;
 Procedure CureAll;
 Procedure ConscoisAll;
 Procedure RevitalizeAll;
 Procedure CureSpell;
 Procedure PhenominaSpell;
 Procedure ViewParty;
 Procedure ViewCharacter;
 Procedure QuickView;
 Procedure CastSpell;
 Function ReturnPredict : integer;
 Procedure Extrasense;
 Procedure Rest;
 Procedure GameOption;
 Procedure SelectMode;


IMPLEMENTATION

Procedure AttackSpell;
begin
   Talk('전투 모드가 아닐때는 공격 마법을 사용할 수 없습니다.');
end;

Procedure SPnotEnough;
begin
   Talk('그러나, 마법 지수가 충분하지 않습니다.');
end;

Procedure HealOne(whom : byte);
begin
   with player[whom] do begin
      if (dead > 0) or (unconscious > 0) or (poison > 0) then begin
         if party.etc[6] = 0 then Print(7,name+'는 치료될 상태가 아닙니다.');
         exit;
      end;
      if hp >= endurance * level[1] then begin
         if party.etc[6] = 0 then Print(7,name+'는 치료할 필요가 없습니다.');
         exit;
      end;
   end;
   i := 2 * player[person].level[2];
   if player[person].sp < i then begin
      if party.etc[6] = 0 then SPnotEnough;
      exit;
   end;
   player[person].sp := player[person].sp - i;
   player[whom].hp := player[whom].hp + i * 3 div 2;
   with player[whom] do
   if hp > level[1] * endurance then hp := level[1] * endurance;
   Print(15,player[whom].name+'는 치료되어 졌습니다.');
end;

Procedure CureOne(whom : byte);
begin
   with player[whom] do begin
      if (dead > 0) or (unconscious > 0) then begin
         if party.etc[6] = 0 then Print(7,name+'는 독이 치료될 상태가 아닙니다.');
         exit;
      end;
      if poison = 0 then begin
         if party.etc[6] = 0 then Print(7,player[whom].name+'는 독에 걸리지 않았습니다.');
         exit;
      end;
   end;
   if player[person].sp < 15 then begin
      if party.etc[6] = 0 then SPnotEnough;
      exit;
   end;
   player[person].sp := player[person].sp - 15;
   player[whom].poison := 0;
   Print(15,player[whom].name+'의 독은 제거 되었습니다.');
end;

Procedure ConsciousOne(whom : byte);
begin
   with player[whom] do begin
      if dead > 0 then begin
         if party.etc[6] = 0 then Print(7,name+'는 의식이 돌아올 상태가 아닙니다.');
         exit;
      end;
      if unconscious = 0 then begin
         if party.etc[6] = 0 then Print(7,player[whom].name+'는 의식불명이 아닙니다.');
         exit;
      end;
   end;
   i := 10 * player[whom].unconscious;
   if player[person].sp < i then begin
      if party.etc[6] = 0 then SPnotEnough;
      exit;
   end;
   player[person].sp := player[person].sp - i;
   player[whom].unconscious := 0;
   if player[whom].hp <= 0 then player[whom].hp := 1;
   Print(15,player[whom].name+'는 의식을 되찾았습니다.');
end;

Procedure RevitalizeOne(whom : byte);
begin
   if player[whom].dead = 0 then begin
      if party.etc[6] = 0 then Print(7,player[whom].name+'는 아직 살아 있습니다.');
      exit;
   end;
   i := 30 * player[whom].dead;
   if player[person].sp < i then begin
      if party.etc[6] = 0 then SPnotEnough;
      exit;
   end;
   player[person].sp := player[person].sp - i;
   with player[whom] do begin
      dead := 0;
      if unconscious > endurance * level[1] then
         unconscious := endurance * level[1];
      if unconscious = 0 then unconscious := 1;
      Print(15,name+'는 다시 생명을 얻었습니다.');
   end;
end;

Procedure HealAll;
var i : byte;
begin
   for i:= 1 to 6 do if player[i].name <> '' then HealOne(i);
end;

Procedure CureAll;
var i : byte;
begin
   for i:= 1 to 6 do if player[i].name <> '' then CureOne(i);
end;

Procedure ConscoisAll;
var i : byte;
begin
   for i:= 1 to 6 do if player[i].name <> '' then ConsciousOne(i);
end;

Procedure RevitalizeAll;
var i : byte;
begin
   for i:= 1 to 6 do if player[i].name <> '' then RevitalizeOne(i);
end;

Procedure CureSpell;
var
   i,j,whom : integer;
begin
   m[0] := '누구에게';
   for i:= 1 to 6 do m[i] := player[i].name;
   j := 6;
   if player[6].name <> '' then j := 7;
   m[j] := '모든 사람들에게';
   whom := Select(60,j,j,TRUE,TRUE);
   if whom = 0 then exit;
   m[0] := '선택';
   if whom <> j then begin
      for i := 19 to 25 do m[i-18] := ReturnMagic(i);
      i := player[person].level[2] div 2 + 1;
      if i > 7 then i := 7;
      j := Select(60,i,7,FALSE,TRUE);
      if j = 0 then exit;
      case j of
         1 : HealOne(whom);
         2 : CureOne(whom);
         3 : begin
                CureOne(whom);
                HealOne(whom);
             end;
         4 : ConsciousOne(whom);
         5 : RevitalizeOne(whom);
         6 : begin
                ConsciousOne(whom);
                CureOne(whom);
                HealOne(whom);
             end;
         7 : begin
                RevitalizeOne(whom);
                ConsciousOne(whom);
                CureOne(whom);
                HealOne(whom);
             end;
      end;
   end
   else begin
      for i := 26 to 32 do m[i-25] := ReturnMagic(i);
      i := player[person].level[2] div 2 - 3;
      if i < 0 then begin
         print(7,player[person].name+'는 강한 치료 마법은 아직 불가능 합니다.');
         PressAnyKey;
         exit;
      end;
      j := Select(60,i,7,TRUE,TRUE);
      case j of
         1 : HealAll;
         2 : CureAll;
         3 : begin
                CureAll;
                HealAll;
             end;
         4 : ConscoisAll;
         6 : RevitalizeAll;
         5 : begin
                ConscoisAll;
                CureAll;
                HealAll;
             end;
         7 : begin
                RevitalizeAll;
                ConscoisAll;
                CureAll;
                HealAll;
             end;
      end;
   end;
   Print(7,''); Print(7,'');
   SimpleDisCond;
   PressAnyKey;
end;

Procedure PhenominaSpell;

 Procedure SPnotEnough;
 begin
    Message(7,'마법 지수가 충분하지 않습니다.');
 end;

var
   ok : boolean;
begin
   m[0] := '선택';
   for i := 1 to 8 do m[i] := ReturnMagic(i+32);
   if player[person].level[2] > 1 then j := player[person].level[2] div 2 + 1
   else j := 1;
   if j > 8 then j := 8;
   k := Select(60,j,8,TRUE,TRUE);
   if k = 0 then exit;
   case k of
      1 : begin
             if player[person].sp < 1 then begin
                SPnotEnough;
                exit;
             end;
             if party.etc[1] < 255 then inc(party.etc[1]);
             Message(15,'일행은 마법의 횃불을 밝혔습니다.');
             dec(player[person].sp);
             Scroll(TRUE);
          end;
      2 : begin
             if player[person].sp < 5 then begin
                SPnotEnough;
                exit;
             end;
             Message(15,'일행은 공중부상중 입니다.');
             party.etc[4] := 255;
             player[person].sp := player[person].sp - 5;
          end;
      3 : begin
             if player[person].sp < 10 then begin
                SPnotEnough;
                exit;
             end;
             Message(15,'일행은 물위를 걸을수 있습니다.');
             party.etc[2] := 255;
             player[person].sp := player[person].sp - 10;
          end;
      4 : begin
             if player[person].sp < 20 then begin
                SPnotEnough;
                exit;
             end;
             Message(15,'일행은 늪위를 걸을수 있습니다.');
             party.etc[3] := 255;
             player[person].sp := player[person].sp - 20;
          end;
      5 : begin
             if player[person].sp < 25 then begin
                SPnotEnough;
                exit;
             end;
             m[0] := '';
             Print(15,'<<<  방향을 선택하시오  >>>');
             m[1] := '북쪽';
             m[2] := '남쪽';
             m[3] := '동쪽';
             m[4] := '서쪽';
             for i := 1 to 4 do m[i] := m[i]+'으로 기화 이동';
             k := Select(80,4,4,FALSE,TRUE);
             x1 := 0; y1 := 0;
             if k = 0 then exit;
             case k of
                1 : y1 := -1;
                2 : y1 := 1;
                3 : x1 := 1;
                4 : x1 := -1;
             end;
             x := x + 2*x1; y := y + 2*y1;
             if (x<5) or (x>=xmax-3) or (y<5) or (y>=ymax-3) then begin
                x := x - 2*x1; y := y - 2*y1;
                exit;
             end;
             ok := FALSE;
             case position of
                town : if map[x,y] in [0,27..47] then ok := TRUE;
                ground : if map[x,y] in[0,24..47] then ok := TRUE;
                den : if map[x,y] in[0,41..47] then ok := TRUE;
                keep : if map[x,y] in[0,40..47] then ok := TRUE;
             end;
             if not ok then begin
                x := x - 2*x1; y := y - 2*y1;
                Message(7,'기화 이동이 통하지 않습니다.');
                exit;
             end;
             player[person].sp := player[person].sp - 25;
             if (map[x-x1,y-y1] = 0) or
             ((position in [den,keep]) and (map[x+x1,y+y1] = 52)) then begin
                x := x - 2*x1; y := y - 2*y1;
                Message(13,'알수없는 힘이 당신의 마법을 배척합니다.');
             end
             else begin
                Message(15,'기화 이동을 마쳤습니다.');
                Scroll(TRUE);
             end;
          end;
      6 : begin
             if party.map in [20,25,26] then begin
                Message(13,' 이 동굴의 악의 힘이 이 마법을 방해합니다.');
                exit;
             end;
             if player[person].sp < 30 then begin
                SPnotEnough;
                exit;
             end;
             m[0] := '';
             Print(15,'<<<  방향을 선택하시오  >>>');
             m[1] := '북쪽';
             m[2] := '남쪽';
             m[3] := '동쪽';
             m[4] := '서쪽';
             for i := 1 to 4 do m[i] := m[i]+'에 지형 변화';
             x1 := 0; y1 := 0;
             k := Select(80,4,4,FALSE,TRUE);
             if k = 0 then exit;
             case k of
                1 : y1 := -1;
                2 : y1 := 1;
                3 : x1 := 1;
                4 : x1 := -1;
             end;
             case position of
                town : k := 47;
                ground : k := 41;
                den : k := 43;
                keep : k := 43;
             end;
             player[person].sp := player[person].sp - 30;
             if (map[x+x1,y+y1] = 0) or
             ((position in [den,keep]) and (map[x+x1,y+y1] = 52)) then begin
                x1 := 0; y1 := 0;
                Message(13,'알수없는 힘이 당신의 마법을 배척합니다.');
             end
             else begin
                map[x+x1,y+y1] := k;
                Message(15,'지형 변화에 성공했습니다.');
                Scroll(TRUE);
             end;
          end;
      7 : begin
             if party.map in [20,25,26] then begin
                Message(13,' 이 동굴의 악의 힘이 이 마법을 방해합니다.');
                exit;
             end;
             if player[person].sp < 50 then begin
                SPnotEnough;
                exit;
             end;
             m[0] := '';
             Print(15,'<<<  방향을 선택하시오  >>>');
             m[1] := '북쪽';
             m[2] := '남쪽';
             m[3] := '동쪽';
             m[4] := '서쪽';
             for i := 1 to 4 do m[i] := m[i]+'으로 공간이동';
             x1 := 0; y1 := 0;
             k := Select(80,4,4,FALSE,TRUE);
             if k = 0 then exit;
             case k of
                1 : y1 := -1;
                2 : y1 := 1;
                3 : x1 := 1;
                4 : x1 := -1;
             end;
             Print(11,'당신의 공간 이동력을 지정');
             setcolor(15);
             HGotoXY(266,70);
             HPrint('## ');
             setcolor(10);
             HPrint('5000');
             setcolor(15);
             HPrint(' 공간 이동력');
             setcolor(10);
             k := 5;
             ok := FALSE;
             repeat begin
                j := 0;
                c := readkey;
                if c in [#13,#27] then ok := TRUE;
                if c = #0 then begin
                   c := readkey;
                   case c of
                      #75,#80 : j := -1;
                      #72,#77 : j := 1;
                   end;
                   if j <> 0 then begin
                      k := k + j;
                      if (k<1) or (k>9) then k := k - j
                      else begin
                         str(k,s);
                         setfillstyle(1,8);
                         bar(290,70,297,86);
                         HPrintXY(290,70,s);
                      end;
                   end;
                end;
             end;
             until ok;
             if c = #27 then begin
                Clear;
                exit;
             end;
             x := x + k*x1; y := y + k*y1;
             if (x<5) or (x>=xmax-3) or (y<5) or (y>=ymax-3) then begin
                x := x - k*x1; y := y - k*y1;
                Message(7,'공간 이동이 통하지 않습니다.');
                exit;
             end;
             ok := FALSE;
             case position of
                town : if map[x,y] in [27..47] then ok := TRUE;
                ground : if map[x,y] in [24..47] then ok := TRUE;
                den : if map[x,y] in [41..47] then ok := TRUE;
                keep : if map[x,y] in [27..47] then ok := TRUE;
             end;
             if not ok then begin
                x := x - k*x1; y := y - k*y1;
                Message(7,'공간 이동 장소로 부적합 합니다.');
                exit;
             end;
             player[person].sp := player[person].sp - 50;
             if (map[x,y] = 0) or
             ((position in [den,keep]) and (map[x+x1,y+y1] = 52)) then begin
                x := x - k*x1; y := y - k*y1;
                Message(13,'알수없는 힘이 당신을 배척합니다.');
             end
             else begin
                Message(15,'공간 이동 마법이 성공했습니다.');
                Scroll(TRUE);
             end;
          end;
      8 : begin
             if player[person].sp < 30 then begin
                SPnotEnough;
                exit;
             end;
             j := 0;
             for i := 1 to 6 do if player[i].name <> '' then inc(j);
             if party.food + j > 255 then party.food := 255
             else party.food := party.food + j;
             player[person].sp := player[person].sp - 30;
             str(j,s);
             for i := 0 to 1 do begin
                page := 1 - page;
                setactivepage(page);
                hany := 30;
                Print(15,' 식량 제조 마법은 성공적으로 수행되었습니다');
                hany := hany + 20;
                str(j,s);
                Print(15,'            '+s+' 개의 식량이 증가됨');
                hany := hany + 30;
                str(party.food,s);
                Print(11,'      일행의 현재 식량은 '+s+' 개 입니다');
             end;
          end;
   end;
   displaySP;
end;

Procedure ViewParty;

 Procedure ViewPartySub(i:integer);
 begin
    s := ' 가능'; if party.etc[i] = 0 then s := ' 불가';
 end;

begin
   setcolor(7);
   with party do
   for i := 0 to 1 do begin
      SetActivePage(i);
      str(x,s); HPrintXY(250,45,'X 축 = '+s);
      str(y,s); HPrintXY(250,60,'Y 축 = '+s);
      str(food,s); HPrintXY(250,80,'남은 식량 = '+s);
      str(gold,s); HPrintXY(250,95,'남은 황금 = '+s);
      ViewPartySub(1);
      HPrintXY4Select(250,115,'마법의 횃불 :'+s);
      ViewPartySub(4);
      HPrintXY4Select(250,130,'공중 부상   :'+s);
      ViewPartySub(2);
      HPrintXY4Select(250,145,'물위를 걸음 :'+s);
      ViewPartySub(3);
      HPrintXY4Select(250,160,'늪위를 걸음 :'+s);
   end;
end;

Procedure ViewCharacter;
begin
   Clear;
   hany := 30;
   print(15,'능력을 보고싶은 인물을 선택하시오');
   i := ChooseWhom(FALSE);
   Clear;
   if i = 0 then Exit;
   with player[i] do begin
      setcolor(11);
      HPrintXY4Select(240,30,'# 이름 : '+name);
      HPrintXY4Select(240,46,'# 성별 : '+ReturnSex(i));
      HPrintXY4Select(240,62,'# 계급 : '+ReturnClass(i));
      setcolor(3);
      str(strength,s);
      HPrintXY4Select(244,88,'체력   : '+s);
      str(mentality,s);
      HPrintXY4Select(434,88,'정신력 : '+s);
      str(concentration,s);
      HPrintXY4Select(244,104,'집중력 : '+s);
      str(endurance,s);
      HPrintXY4Select(434,104,'인내력 : '+s);
      str(resistance,s);
      HPrintXY4Select(244,120,'저항력 : '+s);
      str(agility,s);
      HPrintXY4Select(434,120,'민첩성 : '+s);
      str(luck,s);
      HPrintXY4Select(244,136,'행운   : '+s);
      setcolor(14);
      HPrintXY4Select(250,180,'아무키나 누르십시오 ...');
      c := readkey;
      if c = #0 then c := readkey;
      SetfillStyle(1,8);
      bar(244,88,610,196);
      for j := 0 to 1 do begin
         SetActivePage(page);
         page := 1 - page;
         setcolor(11);
         HPrintXY4Select(240,30,'# 이름 : '+name);
         HPrintXY4Select(240,46,'# 성별 : '+ReturnSex(i));
         HPrintXY4Select(240,62,'# 계급 : '+ReturnClass(i));
         setcolor(3);
         str(accuracy[1],s);
         HPrintXY4Select(244,88,'무기의 정확성   : '+s);
         str(accuracy[2],s);
         HPrintXY4Select(244,104,'정신력의 정확성 : '+s);
         str(accuracy[3],s);
         HPrintXY4Select(244,120,'초감각의 정확성 : '+s);
         str(level[1],s);
         HPrintXY4Select(434,88, '전투 레벨   : '+s);
         str(level[2],s);
         HPrintXY4Select(434,104,'마법 레벨   : '+s);
         str(level[3],s);
         HPrintXY4Select(434,120,'초감각 레벨 : '+s);
         str(experience,s);
         HPrintXY4Select(244,136,'## 경험치   : '+s);
         setcolor(2);
         HPrintXY4Select(244,160,'사용 무기 - '+ReturnWeapon(player[i].weapon));
         if player[i].shield <> 0 then
            HPrintXY4Select(244,176,'방패 - '+ReturnShield(i)+' 방패');
         if player[i].armor <> 0 then
            HPrintXY4Select(434,176,'갑옷 - '+ReturnArmor(i)+' 갑옷');
      end;
   end;
end;

Procedure QuickView;
var
   color : integer;
begin
   color := GetColor;
   for i:= 0 to 1 do begin
      SetActivePage(i);
      setcolor(15);
      HPrintXY(280,40,'이름');
      setcolor(12);
      HPrintXY(400,40,' 중독 의식불명 죽음');
   end;
   setcolor(7);
   for i := 0 to 1 do begin
      SetActivePage(i);
      for j:= 1 to 6 do
      with player[j] do
      if name <> '' then begin
         HPrintXY4Select(250,60+j*15,name);
         str(poison,s);
         HPrintXY4Select(424,60+j*15,s);
         str(unconscious : 3,s);
         HPrintXY4Select(464,60+j*15,s);
         str(dead : 5,s);
         HPrintXY4Select(500,60+j*15,s);
      end;
   end;
   SetActivePage(1-page);
end;

Procedure CastSpell;
begin
   person := ChooseWhom(FALSE);
   if person = 0 then exit;
   if not exist(person) then begin
      ReturnSexData;
      Message(7,SexData+'는 마법을 사용할수있는 상태가 아닙니다');
      exit;
   end;
   m[0] := '사용할 마법의 종류 ===>';
   m[1] := '공격 마법';
   m[2] := '치료 마법';
   m[3] := '변화 마법';
   k := Select(80,3,3,TRUE,TRUE);
   case k of
      1 : AttackSpell;
      2 : CureSpell;
      3 : PhenominaSpell;
   end;
end;

Function ReturnPredict : integer;
var
   Return : integer;
begin
   Return := 0;
   with party do begin
      case etc[10] of
         0..2 : Return := 1;
         3 : Return := 2;
         4,5 : Return := 3;
         6 : Return := 4;
      end;
      if Return = 4 then if map = 7 then Return := 5;
      case etc[13] of
         1 : Return := 6;
         2 : Return := 7;
         3 : Return := 8;
      end;
      if etc[13] = 3 then
      case etc[14] of
         0 : Return := 9;
         1 : Return := 10;
         2 : Return := 11;
         3 : Return := 9;
         4 : Return := 12;
         5 : Return := 11;
         6 : Return := 13;
      end;
      if etc[14] = 6 then if map = 16 then Return := 14;
      if (etc[14]=6) and (map=2) then Return := 13
      else if Return = 13 then
      case etc[15] of
         0 : Return := 15;
         1 : Return := 16;
         2 : Return := 15;
         3 : Return := 17;
         4 : Return := 15;
         5 : Return := 18;
      end;
      if (map = 13) and not (odd(party.etc[40]) or odd(party.etc[40])) then
         Return := 19;
      if etc[15] = 5 then begin
         if map in [4,19..21] then Return := 20;
         if odd(party.etc[40]) and odd(party.etc[41]) then Return := 21
      end;
      if map = 5 then Return := 22;
      if (etc[15] = 5) and (map > 21) then
      case map of
         22,24 : Return := 22;
         23 : Return := 23;
         25 : Return := 24;
         26 : Return := 25;
      end;
   end;
   ReturnPredict := Return;
end;

Procedure Extrasense;

 Procedure ESPnotEnough;
 begin
    Message(7,'ESP 지수가 충분하지 않습니다.');
 end;

const
   Predict_Data : array [1..25] of string =
                  ('Lord Ahn 을 만날',
                   'MENACE를 탐험할',
                   'Lord Ahn에게 다시 돌아갈',
                   'LASTDITCH로 갈',
                   'LASTDITCH의 성주를 만날',
                   'PYRAMID 속의 Major Mummy를 물리칠',
                   'LASTDITCH의 성주에게로 돌아갈',
                   'LASTDITCH의 GROUND GATE로 갈',
                   'GAIA TERRA의 성주를 만날',
                   'EVIL SEAL에서 황금의 봉인을 발견할',
                   'GAIA TERRA의 성주에게 돌아갈',
                   'QUAKE에서 ArchiGagoyle를 물리칠',
                   '북동쪽의 WIVERN 동굴에 갈',
                   'WATER FIELD로 갈',
                   'WATER FIELD의 군주를 만날',
                   'NOTICE 속의 Hidra를 물리칠',
                   'LOCKUP 속의 Dragon을 물리칠',
                   'GAIA TERRA 의 SWAMP GATE로 갈',
                   '위쪽의 게이트를 통해 SWAMP KEEP으로 갈',
                   'SWAMP 대륙에 존재하는 두개의 봉인을 풀',
                   'SWAMP KEEP의 라바 게이트를 작동 시킬',
                   '적의 집결지인 EVIL CONCENTRATION으로 갈',
                   '숨겨진 적의 마지막 요새로 들어갈',
                   '위쪽의 동굴에서 Necromancer를 만날',
                   'Necromancer와 마지막 결전을 벌일');

var
   i,j,k : integer;
label
   Exit_For;
begin
   Clear;
   person := ChooseWhom(FALSE);
   if person = 0 then exit;
   if not exist(person) then begin
      ReturnSexData;
      Message(7,SexData+'는 초감각을 사용할수있는 상태가 아닙니다');
      exit;
   end;
   if not ((player[person].class in [2,3,6]) or (party.etc[38] and bit1 > 0)) then begin
      Talk('당신에게는 아직 능력이 없습니다.');
      exit;
   end;
   m[0] := '사용할 초감각의 종류 ===>';
   for j := 1 to 5 do m[j] := ReturnMagic(j+40);
   k := Select(74,5,5,TRUE,TRUE);
   if k = 5 then begin
      Message(7,ReturnMagic(k+40)+'은 전투 모드에서만 사용됩니다.');
      exit;
   end;
   case k of
      1 : begin
             if party.map > 24 then begin
                Message(13,' 이 동굴의 악의 힘이 이 마법을 방해합니다.');
                exit;
             end;
             if player[person].esp < 10 then begin
                ESPnotEnough;
                exit;
             end;
             Aux := SoundOn;
             SoundOn := FALSE;
             move(font^[0],font^[55],246);
             for i := 5 to 246 do font^[0,i] := 0;
             if position in [den,keep] then begin
                move(font^[52],chara^[55],246);
                for i := 5 to 246 do font^[52,i] := 0;
             end;
             Scroll(TRUE);
             Print(15,'일행은 주위를 투시하고 있다.');
             PressAnyKey;
             move(font^[55],font^[0],246);
             if position in [den,keep] then move(chara^[55],font^[52],246);
             Scroll(TRUE);
             SoundOn := Aux;
             player[person].esp := player[person].esp - 10;
          end;
      2 : begin
             if player[person].esp < 5 then begin
                ESPnotEnough;
                exit;
             end;
             Print(7,' 당신은 당신의 미래를 예언한다 ...');
             Print(7,'');
             k := ReturnPredict;
             if k in [1..25] then
                s := '당신은 ' + Predict_Data[k] + ' 것이다'
             else
                s := '당신은 어떤 힘에 의해 예언을 방해 받고 있다';
             cPrint(10,15,' # ',s,'');
             player[person].esp := player[person].esp - 5;
             PressAnyKey;
          end;
      3 : begin
             if player[person].esp < 20 then begin
                ESPnotEnough;
                exit;
             end;
             Message(15,'당신은 잠시동안 다른 사람의 마음을 읽을수 있다.');
             party.etc[5] := 3;
          end;
      4 : begin
             if party.map > 24 then begin
                Message(13,' 이 동굴의 악의 힘이 이 마법을 방해합니다.');
                exit;
             end;
             if player[person].esp < player[person].level[3] * 5 then begin
                ESPnotEnough;
                exit;
             end;
             m[0] := '';
             Print(15,'<<<  방향을 선택하시오  >>>');
             m[1] := '북쪽';
             m[2] := '남쪽';
             m[3] := '동쪽';
             m[4] := '서쪽';
             for i := 1 to 4 do m[i] := m[i]+'으로 천리안을 사용';
             k := Select(80,4,4,FALSE,TRUE);
             x1 := 0; y1 := 0;
             if k = 0 then exit;
             player[person].esp := player[person].esp - player[person].level[3] * 5;
             case k of
                1 : y1 := -1;
                2 : y1 := 1;
                3 : x1 := 1;
                4 : x1 := -1;
             end;
             party.xaxis := x; party.yaxis := y;
             Aux := SoundOn;
             SoundOn := FALSE;
             for i := 0 to 1 do begin
                page := 1 - page;
                setactivepage(page);
                hany := 30;
                print(15,'천리안의 사용중 ...');
                setcolor(14);
                HPrintXY4Select(250,184,'아무키나 누르시오 ...');
             end;
             for i := 1 to player[person].level[3] do begin
                x := x + x1; y := y + y1;
                if (x<5) or (x>=xmax-3) or (y<5) or (y>=ymax-3) then begin
                   x := x - x1; y := y - y1;
                end
                else begin
                   Scroll(FALSE);
                   c := readkey;
                   if c = #0 then c := readkey;
                   if c = #27 then goto Exit_For;
                end;
             end;
Exit_For:
             Clear;
             x := party.xaxis; y := party.yaxis;
             SoundOn := Aux;
             Scroll(TRUE);
          end;
   end;
   DisplayESP;
end;

Procedure Rest;
begin
   Clear;
   for person := 1 to 6 do
   with player[person] do
   if name <> '' then begin
      if sex = male then s := '그의' else s := '그녀의';
      if party.food <= 0 then Print(4,'일행은 식량이 바닥났다')
      else if dead > 0 then Print(7,name+'는 죽었다')
      else if (unconscious>0) and (poison=0) then begin
         unconscious := unconscious - level[1] - level[2] - level[3];
         if unconscious <= 0 then begin
            Print(15,name+'는 의식이 회복되었다');
            unconscious := 0;
            if hp <= 0 then hp := 1;
            dec(party.food);
         end
         else Print(15,name+'는 여전히 의식 불명이다');
      end
      else if (unconscious>0) and (poison>0) then
         Print(7,'독때문에, '+name+' '+s+' 의식은 회복되지 않았다')
      else if poison > 0 then
         Print(7,'독때문에, '+name+' '+s+' 건강은 회복되지 않았다')
      else begin
         i := (level[1]+level[2]+level[3]) * 2;
         if hp >= endurance * level[1] then if party.food < 255 then inc(party.food);
         hp := hp + i;
         if hp >= endurance * level[1] then begin
            hp := endurance * level[1];
            Print(15,name+'는 모든 건강이 회복되었다');
         end
         else Print(15,name+'는 치료되었다');
         dec(party.food);
      end;
   end;
   if party.etc[1] > 0 then dec(party.etc[1]);
   for i := 2 to 4 do party.etc[i] := 0;
   for i := 1 to 6 do with player[i] do if name <> '' then begin
      sp := mentality * level[2];
      esp := concentration * level[3];
   end;
   SimpleDisCond;
   PressAnyKey;
end;

Procedure GameOption;
begin
   m[0] := '게임 선택 상황';
   m[1] := '난이도 조절';
   m[2] := '정식 일행의 순서 정렬';
   m[3] := '일행에서 제외 시킴';
   m[4] := '이전의 게임을 재개';
   m[5] := '현재의 게임을 저장';
   m[6] := '게임을 마침';
   k := Select(60,6,6,TRUE,TRUE);
   case k of
      1 : begin
             setcolor(12);
             HPrintXY(255,40,'한번에 출현하는 적들의');
             HPrintXY(287,56,'최대치를 기입하십시오');
             m[0] := '';
             for i:= 1 to 5 do begin
               str(i+2,s); m[i] := s+' 명의 적들';
             end;
             maxenemy^ := Select(90,5,5,FALSE,TRUE)+2;
             if maxenemy^ = 2 then maxenemy^ := 5;
             setcolor(12);
             m[0] := '일행들의 지금 성격은 어떻습니까 ?';
             m[1] := '일부러 전투를 피하고 싶다';
             m[2] := '너무 잦은 전투는 원하지 않는다';
             m[3] := '마주친 적과는 전투를 하겠다';
             m[4] := '보이는 적들과는 모두 전투하겠다';
             m[5] := '그들은 피에 굶주려 있다';
             encounter^ := Select(71,5,5,FALSE,TRUE);
             if encounter^ = 0 then encounter^ := 3;
             encounter^ := 6 - encounter^;
          end;
      2 : begin
             setcolor(12);
             HPrintXY(240,30,'현재의 일원의 전투 순서를 정렬 하십시오.');
             setcolor(11);
             HPrintXY(255,70,'순서를 바꿀 일원');
             m[0] := '';
             for i := 2 to 5 do
                if player[i].name <> '' then m[i-1] := player[i].name
                else m[i-1] := 'Reserved';
             j := select(95,4,4,FALSE,FALSE) + 1;
             if j = 1 then begin
                clear; exit;
             end;
             setcolor(11);
             HPrintXY(445,70,'순서를 바꿀 일원');
             for i := 2 to 5 do m[i-1] := '                        '+m[i-1];
             k := select(95,4,4,FALSE,FALSE) + 1;
             if k = 1 then begin
                clear; exit;
             end;
             move(player[j],player[7],55);
             move(player[k],player[j],55);
             move(player[7],player[k],55);
             Display_Condition;
             clear;
          end;
      3 : begin
             setcolor(12);
             HPrintXY(245,35,'일행에서 제외 시키고 싶은 사람을 고르십시오.');
             m[0] := '';
             for i := 2 to 6 do
                if player[i].name <> '' then m[i-1] := player[i].name
                else m[i-1] := 'Reserved';
             k := select(75,5,5,FALSE,TRUE) + 1;
             if k = 1 then begin
                clear; exit;
             end;
             player[k].name := '';
             Display_Condition;
          end;
      4 : begin
             m[0] := '불러 내고 싶은 게임을 선택하십시오.';
             m[1] := '없습니다';
             m[2] := '본 게임 데이타';
             m[3] := '게임 데이타 1 (부)';
             m[4] := '게임 데이타 2 (부)';
             m[5] := '게임 데이타 3 (부)';
             k := select(65,5,5,FALSE,TRUE);
             if k < 2 then exit;
             LoadNo := chr(k+47);
             setcolor(11);
             HPrintXY(280,80,'저장했던 게임을 다시 불러옵니다');
             LoadFont := FALSE; Load; Scroll(TRUE); Display_Condition;
             LoadNo := '1';
             Clear;
          end;
      5 : begin
             m[0] := '게임의 저장 장소를 선택하십시오.';
             m[1] := '없습니다';
             m[2] := '본 게임 데이타';
             m[3] := '게임 데이타 1 (부)';
             m[4] := '게임 데이타 2 (부)';
             m[5] := '게임 데이타 3 (부)';
             k := select(65,5,5,FALSE,TRUE);
             if k < 2 then exit;
             LoadNo := chr(k+47);
             setcolor(12);
             HPrintXY(312,80,'현재의 게임을 저장합니다');
             Save;
             setcolor(7);
             HPrintXY(360,102,'성공했습니다');
             LoadNo := '1';
             PressAnyKey;
          end;
      6 : GameOver;
   end;
end;

Procedure SelectMode;
begin
   m[0] := '당신의 명령을 고르시오 ===>';
   m[1] := '일행의 상황을 본다';
   m[2] := '개인의 상황을 본다';
   m[3] := '일행의 건강 상태를 본다';
   m[4] := '마법을 사용한다';
   m[5] := '초능력을 사용한다';
   m[6] := '여기서 쉰다';
   m[7] := '게임 선택 상황';
   k := Select(60,7,7,TRUE,TRUE);
   case k of
      0 : exit;
      1 : ViewParty;
      2 : ViewCharacter;
      3 : QuickView;
      4 : CastSpell;
      5 : Extrasense;
      6 : Rest;
      7 : GameOption;
   end;
end;

begin
end.